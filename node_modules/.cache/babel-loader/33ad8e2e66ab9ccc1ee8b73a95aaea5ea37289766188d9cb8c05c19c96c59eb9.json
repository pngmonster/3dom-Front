{"ast":null,"code":"var _jsxFileName = \"/home/giicoo/projects/3DOM FRONT/3dom-Front/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './ChatApp.css';\nimport { useChats } from './hooks/useChats';\nimport { useMessages, useStreamMessage } from './hooks/useMessages';\nimport { MessageThread } from './components/message';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useUploadFile } from './hooks/useFile';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatApp = () => {\n  _s();\n  var _window$Telegram, _window$Telegram$WebA, _window$Telegram$WebA2, _chats$find;\n  const [settings, setSettings] = useState({\n    isOpen: false,\n    theme: 'light'\n  });\n\n  // Получаем данные пользователя из Telegram WebApp\n  const user = ((_window$Telegram = window.Telegram) === null || _window$Telegram === void 0 ? void 0 : (_window$Telegram$WebA = _window$Telegram.WebApp) === null || _window$Telegram$WebA === void 0 ? void 0 : (_window$Telegram$WebA2 = _window$Telegram$WebA.initDataUnsafe) === null || _window$Telegram$WebA2 === void 0 ? void 0 : _window$Telegram$WebA2.user) || {\n    id: 11,\n    first_name: 'Гость',\n    photo_url: 'https://via.placeholder.com/100'\n  };\n  const [inputText, setInputText] = useState('');\n  const [replyContext, setReplyContext] = useState(null);\n  const [attachment, setAttachment] = useState(null);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [chatMenu, setChatMenu] = useState({\n    chatId: null,\n    isOpen: false,\n    position: null\n  });\n\n  //____________MODELS_____________________________________________________________\n  // Это три модели которые есть в backend\n  const [models, setModel] = useState([{\n    id: 'llama2',\n    name: 'Llama 2'\n  }, {\n    id: 'deepseek-r1:8b',\n    name: 'DeepSeek'\n  }, {\n    id: 'mistral',\n    name: 'Mistral'\n  }]);\n  const [activeModel, setActiveModel] = useState('llama2');\n  //_____________________________________________________________________________________________\n\n  //_____________CHATS__________________________________________________________________________\n  // const [chats, setChats] = useState<Chat[]>([\n  //   { id: '1', title: 'Чат 1', lastMessage: 'Привет! Я твой помощник', model: 'llama2' },\n  //   { id: '2', title: 'Чат 2', lastMessage: 'Чем можем помочь?', model: 'deepseek-r1' },\n  //   { id: '3', title: 'Чат 3', lastMessage: 'Частые вопросы', model: 'mistral' },\n  // ]);\n  const {\n    chats,\n    setChats,\n    activeChat,\n    setActiveChat,\n    createAuto,\n    delChat\n  } = useChats(user.id);\n  const [isCreatingChat, setIsCreatingChat] = useState(false);\n  const [newChatTitle, setNewChatTitle] = useState('');\n\n  // Переключение чата\n  const handleChatChange = async chatId => {\n    // Удаляем предыдущий чат, если он пустой\n    setChats(prev => {\n      const prevChat = prev.find(c => c.id === activeChat);\n      if (prevChat !== null && prevChat !== void 0 && prevChat.isEmpty) {\n        return prev.filter(c => c.id !== activeChat);\n      }\n      return prev;\n    });\n    setActiveChat(chatId);\n    setIsMenuOpen(false);\n\n    // Сбрасываем непрочитанные\n    setChats(prev => prev.map(chat => chat.id === chatId ? {\n      ...chat,\n      unreadCount: 0\n    } : chat));\n  };\n\n  // Фокус на поле ввода при создании чата\n  useEffect(() => {\n    if (isCreatingChat && newChatInputRef.current) {\n      newChatInputRef.current.focus();\n    }\n  }, [isCreatingChat]);\n\n  // Создание нового чата\n  const handleCreateChat = async modelId => {\n    const newChat = {\n      id: \"0\",\n      title: `Чат ${chats.filter(c => c.model === modelId).length + 1}`,\n      lastMessage: 'Новый чат создан',\n      model: modelId,\n      isEmpty: true // Теперь это допустимо\n    };\n    setChats(prev => [...prev, newChat]);\n    setParent(null);\n    await handleChatChange(newChat.id);\n  };\n\n  // Получение чатов по моделям\n  const getChatsByModel = modelId => {\n    return chats.filter(chat => chat.model === modelId);\n  };\n\n  // Переименование чата, бэк не поддерживает((\n  const handleRenameChat = newName => {\n    setChats(prev => prev.map(chat => chat.id === chatMenu.chatId ? {\n      ...chat,\n      title: newName\n    } : chat));\n    setChatMenu({\n      chatId: null,\n      isOpen: false,\n      position: null\n    });\n  };\n\n  // Удаление чата\n  const handleDeleteChat = () => {\n    if (!chatMenu.chatId) return;\n    setChats(prev => prev.filter(chat => chat.id !== chatMenu.chatId));\n    if (activeChat === chatMenu.chatId) {\n      var _remainingChats$;\n      const remainingChats = chats.filter(chat => chat.id !== chatMenu.chatId);\n      setActiveChat(((_remainingChats$ = remainingChats[0]) === null || _remainingChats$ === void 0 ? void 0 : _remainingChats$.id) || '');\n    }\n    delChat(chatMenu.chatId);\n    setChatMenu({\n      chatId: null,\n      isOpen: false,\n      position: null\n    });\n  };\n  //_____________________________________________________________________________\n\n  //__________________MESSAGES_________________________\n  const {\n    messages,\n    setMessages,\n    send\n  } = useMessages(activeChat);\n  const [parentId, setParent] = useState(null);\n  const {\n    chunks,\n    error,\n    start\n  } = useStreamMessage(activeChat);\n  const [rootID, setRootID] = useState(null);\n  const {\n    upload\n  } = useUploadFile();\n  useEffect(() => {\n    if (chunks.length > 0) {\n      setMessages(prevMessages => {\n        if (prevMessages.length === 0) return prevMessages;\n        const updatedMessages = [...prevMessages];\n        const lastIndex = updatedMessages.length - 1;\n        updatedMessages[lastIndex] = {\n          ...updatedMessages[lastIndex],\n          content: chunks.join(\"\")\n        };\n        return updatedMessages;\n      });\n    }\n  }, [chunks, parentId]);\n  // Инициализация с приветственным сообщением\n  useEffect(() => {\n    // TODO: надо сделать не добавляем в массив сообщений а как-нибудь по-другому\n    // const welcomeMessage: Message = {\n    //   id: ,\n    //   parent_id: parent_id,\n    //   content: `Привет! Это чат \"${chats.find(c => c.id === activeChat)?.title}\". Чем могу помочь?`,\n    //   role: 'assistant',\n    //   created_at: String(new Date()),\n    // };\n    // setMessages([welcomeMessage]);\n  }, [activeChat]);\n\n  // Автопрокрутка к новым сообщениям\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    console.log(messages);\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = async () => {\n    console.log(res_ids);\n    if (!inputText.trim() && !attachment) return;\n    const currentChat = chats.find(chat => chat.id === activeChat);\n    let requestMessage;\n    let newMsg;\n    if (!currentChat || currentChat.isEmpty) {\n      // Создание чата с авто названием и делание его активным\n      const newChatId = await createAuto(inputText, {\n        telegram_id: user.id,\n        model: activeModel,\n        title: 'ЧБД'\n      });\n      requestMessage = {\n        chat_id: newChatId,\n        parent_id: null,\n        res_ids: res_ids.ids,\n        role: 'user',\n        content: inputText\n      };\n      newMsg = await send(requestMessage);\n      setParent(newMsg.id);\n\n      // Reset input and attachment\n      setInputText('');\n      setAttachment(null);\n      setReplyContext(null);\n\n      // Start streaming the assistant response\n      const tempId = uuidv4();\n      const newResponse = {\n        id: tempId,\n        parent_id: newMsg.id,\n        res_ids: newMsg.res_ids,\n        role: \"assistant\",\n        content: \"\"\n      };\n      setMessages(prev => [...prev, newResponse]);\n      const fullResponse = await start(newMsg.id);\n      const requestMessageAs = {\n        chat_id: requestMessage.chat_id,\n        parent_id: newMsg.id,\n        res_ids: newMsg.res_ids,\n        role: \"assistant\",\n        content: fullResponse\n      };\n      const responseAs = await send(requestMessageAs);\n      setRootID(responseAs.id);\n      // Заменить временное сообщение (id === \"0\") на настоящее\n      setMessages(prev => prev.map(msg => msg.id === tempId ? responseAs // ✅ подставляем настоящее сообщение\n      : msg));\n      setRes({\n        ids: []\n      });\n      await handleChatChange(newChatId);\n      return;\n    } else {\n      requestMessage = {\n        chat_id: activeChat,\n        parent_id: replyContext ? replyContext.messageId : rootID,\n        res_ids: res_ids.ids,\n        role: 'user',\n        content: inputText\n      };\n      newMsg = await send(requestMessage);\n      setParent(newMsg.id);\n      setRes({\n        ids: []\n      });\n    }\n\n    // Reset input and attachment\n    setInputText('');\n    setAttachment(null);\n    setReplyContext(null);\n\n    // Start streaming the assistant response\n    const tempId = uuidv4();\n    const newResponse = {\n      id: tempId,\n      parent_id: newMsg.id,\n      res_ids: newMsg.res_ids,\n      role: \"assistant\",\n      content: \"\"\n    };\n    setMessages(prev => [...prev, newResponse]);\n    const fullResponse = await start(newMsg.id);\n    const requestMessageAs = {\n      chat_id: requestMessage.chat_id,\n      parent_id: newMsg.id,\n      res_ids: newMsg.res_ids,\n      role: \"assistant\",\n      content: fullResponse\n    };\n    const responseAs = await send(requestMessageAs);\n    setRootID(responseAs.id);\n    // Заменить временное сообщение (id === \"0\") на настоящее\n    setMessages(prev => prev.map(msg => msg.id === tempId ? responseAs // ✅ подставляем настоящее сообщение\n    : msg));\n\n    // Обновляем последнее сообщение в списке чатов\n    setChats(prev => prev.map(chat => chat.id === activeChat ? {\n      ...chat,\n      lastMessage: inputText || 'Вложение',\n      unreadCount: 0\n    } : chat));\n  };\n  const [lastRenderedMessageId, setLastRenderedMessageId] = useState(null);\n  const [childIndexes, setChildIndexes] = useState({});\n\n  //___________________________________________________________\n\n  const [res_ids, setRes] = useState({\n    ids: []\n  });\n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const newChatInputRef = useRef(null);\n\n  // Темы\n  useEffect(() => {\n    var _window$matchMedia, _window;\n    // Простая проверка темы без использования Telegram API\n    const isDarkMode = (_window$matchMedia = (_window = window).matchMedia) === null || _window$matchMedia === void 0 ? void 0 : _window$matchMedia.call(_window, '(prefers-color-scheme: dark)').matches;\n    const theme = isDarkMode ? 'dark' : 'light';\n\n    // Применяем тему\n    document.body.classList.toggle('dark-theme', theme === 'dark');\n  }, []);\n\n  // Упрощенная функция смены темы\n  const toggleTheme = () => {\n    const newTheme = document.body.classList.contains('dark-theme') ? 'light' : 'dark';\n    document.body.classList.toggle('dark-theme', newTheme === 'dark');\n  };\n\n  // Генерация ответа бота\n  const generateBotResponse = (userText, context) => {\n    const responses = [\"Я понял ваш запрос. Давайте обсудим это подробнее.\", \"Интересный вопрос! Давайте разберемся вместе.\", \"Спасибо за ваше сообщение. Я уже работаю над этим.\", \"Хорошо, я записал эту информацию. Что еще вас интересует?\", \"Отличное замечание! Давайте продолжим наш разговор.\"];\n    if (context) {\n      return `Отвечая на ваше сообщение \"${context.messageText}\": ${responses[Math.floor(Math.random() * responses.length)]}`;\n    }\n    return responses[Math.floor(Math.random() * responses.length)];\n  };\n\n  // Обработчик вложения файла\n  const handleAttachment = async e => {\n    if (e.target.files && e.target.files[0]) {\n      setAttachment(e.target.files[0]);\n      const res = await upload(activeChat, e.target.files[0]);\n      setRes(res);\n      console.log(res);\n    }\n  };\n\n  // Обработчик нажатия клавиш\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const handleOpenMenu = (chatId, e) => {\n    e.stopPropagation();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setChatMenu({\n      chatId,\n      isOpen: true,\n      position: {\n        top: rect.bottom + 5,\n        left: rect.left - 100\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"menu-button\",\n        onClick: () => setIsMenuOpen(!isMenuOpen),\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: ((_chats$find = chats.find(c => c.id === activeChat)) === null || _chats$find === void 0 ? void 0 : _chats$find.title) || 'Выберите чат'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this), activeChat && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-chat-button\",\n        onClick: () => {\n          var _chats$find2;\n          const currentModel = ((_chats$find2 = chats.find(c => c.id === activeChat)) === null || _chats$find2 === void 0 ? void 0 : _chats$find2.model) || activeModel;\n          handleCreateChat(currentModel);\n        },\n        children: \"\\uFF0B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `side-menu ${isMenuOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"settings-button\",\n        onClick: () => setSettings(prev => ({\n          ...prev,\n          isOpen: true\n        })),\n        children: \"\\u2699\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), settings.isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-settings\",\n            onClick: () => setSettings(prev => ({\n              ...prev,\n              isOpen: false\n            })),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-profile\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.photo_url || 'https://via.placeholder.com/100',\n              alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\",\n              className: \"user-avatar\",\n              onError: e => {\n                e.target.src = 'https://via.placeholder.com/100';\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [user.first_name, user.last_name].filter(Boolean).join(' ') || 'Пользователь'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this), user.username && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"@\", user.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 35\n            }, this), user.language_code && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u042F\\u0437\\u044B\\u043A: \", user.language_code.toUpperCase()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"theme-switcher\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const newTheme = settings.theme === 'light' ? 'dark' : 'light';\n                setSettings(prev => ({\n                  ...prev,\n                  theme: newTheme\n                }));\n                // Здесь можно добавить логику смены темы в Telegram WebApp\n              },\n              children: settings.theme === 'light' ? '🌙 Тёмная тема' : '☀️ Светлая тема'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-overlay\",\n          onClick: () => setSettings(prev => ({\n            ...prev,\n            isOpen: false\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u041C\\u043E\\u0438 \\u0447\\u0430\\u0442\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-menu\",\n          onClick: () => setIsMenuOpen(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories-tabs\",\n        children: models.map(model => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `category-tab ${activeModel === model.id ? 'active' : ''}`,\n          onClick: () => setActiveModel(model.id),\n          children: model.name\n        }, model.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-chat-in-category small\",\n          onClick: () => handleCreateChat(activeModel),\n          children: \"\\uFF0B \\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0447\\u0430\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this), getChatsByModel(activeModel).length > 0 ? [...getChatsByModel(activeModel)].reverse().map(chat => {\n          var _chat$lastMessage, _chatMenu$position, _chatMenu$position2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-item ${activeChat === chat.id ? 'active' : ''}`,\n            onClick: () => handleChatChange(chat.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-title\",\n                children: chat.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-preview\",\n                children: [(_chat$lastMessage = chat.lastMessage) === null || _chat$lastMessage === void 0 ? void 0 : _chat$lastMessage.substring(0, 30), chat.lastMessage && chat.lastMessage.length > 30 ? '...' : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chat-menu-button\",\n                onClick: e => handleOpenMenu(chat.id, e),\n                children: \"\\u22EE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 19\n              }, this), chatMenu.isOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"menu-overlay\",\n                  onClick: () => setChatMenu({\n                    chatId: null,\n                    isOpen: false,\n                    position: null\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"chat-context-menu\",\n                  style: {\n                    top: `${(_chatMenu$position = chatMenu.position) === null || _chatMenu$position === void 0 ? void 0 : _chatMenu$position.top}px`,\n                    left: `${(_chatMenu$position2 = chatMenu.position) === null || _chatMenu$position2 === void 0 ? void 0 : _chatMenu$position2.left}px`\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"menu-item\",\n                    onClick: () => {\n                      var _chats$find3;\n                      const newName = prompt('Введите новое название:', (_chats$find3 = chats.find(c => c.id === chatMenu.chatId)) === null || _chats$find3 === void 0 ? void 0 : _chats$find3.title);\n                      if (newName) handleRenameChat(newName);\n                    },\n                    children: \"\\u041F\\u0435\\u0440\\u0435\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u0442\\u044C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"menu-item delete\",\n                    onClick: handleDeleteChat,\n                    children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0447\\u0430\\u0442\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 550,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 17\n            }, this)]\n          }, chat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-chats\",\n          children: \"\\u041D\\u0435\\u0442 \\u0447\\u0430\\u0442\\u043E\\u0432 \\u0432 \\u044D\\u0442\\u043E\\u0439 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), isMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-overlay\",\n      onClick: () => setIsMenuOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.filter(msg => msg.parent_id === null).map(root => /*#__PURE__*/_jsxDEV(MessageThread, {\n        message: root,\n        messages: messages,\n        childIndexes: childIndexes,\n        setChildIndexes: setChildIndexes,\n        onLastMessageIdChange: id => {\n          console.log('Current last message ID:', id);\n          setRootID(id);\n        },\n        setReplyContext: setReplyContext\n      }, root.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 1\n    }, this), activeChat && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [replyContext && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reply-preview\",\n        children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442 \\u043D\\u0430: \", replyContext.messageText, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setReplyContext(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"attach-button\",\n          onClick: () => {\n            var _fileInputRef$current;\n            return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n          },\n          children: \"\\uD83D\\uDCCE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInputRef,\n          onChange: handleAttachment,\n          style: {\n            display: 'none'\n          },\n          accept: \".pdf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          onKeyDown: handleKeyDown,\n          placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n          rows: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSendMessage,\n          disabled: !inputText.trim() && !attachment,\n          children: attachment ? '📤' : '➤'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 406,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatApp, \"hH0JAnFhCa61VRaxY0g1lriE7PM=\", false, function () {\n  return [useChats, useMessages, useStreamMessage, useUploadFile];\n});\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useChats","useMessages","useStreamMessage","MessageThread","v4","uuidv4","useUploadFile","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatApp","_s","_window$Telegram","_window$Telegram$WebA","_window$Telegram$WebA2","_chats$find","settings","setSettings","isOpen","theme","user","window","Telegram","WebApp","initDataUnsafe","id","first_name","photo_url","inputText","setInputText","replyContext","setReplyContext","attachment","setAttachment","isMenuOpen","setIsMenuOpen","chatMenu","setChatMenu","chatId","position","models","setModel","name","activeModel","setActiveModel","chats","setChats","activeChat","setActiveChat","createAuto","delChat","isCreatingChat","setIsCreatingChat","newChatTitle","setNewChatTitle","handleChatChange","prev","prevChat","find","c","isEmpty","filter","map","chat","unreadCount","newChatInputRef","current","focus","handleCreateChat","modelId","newChat","title","model","length","lastMessage","setParent","getChatsByModel","handleRenameChat","newName","handleDeleteChat","_remainingChats$","remainingChats","messages","setMessages","send","parentId","chunks","error","start","rootID","setRootID","upload","prevMessages","updatedMessages","lastIndex","content","join","_messagesEndRef$curre","console","log","messagesEndRef","scrollIntoView","behavior","handleSendMessage","res_ids","trim","currentChat","requestMessage","newMsg","newChatId","telegram_id","chat_id","parent_id","ids","role","tempId","newResponse","fullResponse","requestMessageAs","responseAs","msg","setRes","messageId","lastRenderedMessageId","setLastRenderedMessageId","childIndexes","setChildIndexes","fileInputRef","_window$matchMedia","_window","isDarkMode","matchMedia","call","matches","document","body","classList","toggle","toggleTheme","newTheme","contains","generateBotResponse","userText","context","responses","messageText","Math","floor","random","handleAttachment","e","target","files","res","handleKeyDown","key","shiftKey","preventDefault","handleOpenMenu","stopPropagation","rect","currentTarget","getBoundingClientRect","top","bottom","left","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_chats$find2","currentModel","src","alt","onError","last_name","Boolean","username","language_code","toUpperCase","reverse","_chat$lastMessage","_chatMenu$position","_chatMenu$position2","substring","style","_chats$find3","prompt","root","message","onLastMessageIdChange","_fileInputRef$current","click","type","ref","onChange","display","accept","value","onKeyDown","placeholder","rows","disabled","_c","$RefreshReg$"],"sources":["/home/giicoo/projects/3DOM FRONT/3dom-Front/src/App.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useContext } from 'react';\nimport './ChatApp.css';\nimport { Chat, ChatMenu, Message, Model, ReplyContext, Settings, TelegramUser } from './types';\nimport { useChats } from './hooks/useChats';\nimport { useMessages, useStreamMessage } from './hooks/useMessages';\nimport { MessageIn } from './api/types';\nimport { MessageThread } from './components/message'\nimport { v4 as uuidv4 } from 'uuid';\nimport { useUploadFile } from './hooks/useFile';\n\n\nconst ChatApp: React.FC = () => {\n  const [settings, setSettings] = useState<Settings>({\n    isOpen: false,\n    theme: 'light'\n  });\n\n  // Получаем данные пользователя из Telegram WebApp\n  const user: TelegramUser = window.Telegram?.WebApp?.initDataUnsafe?.user || {\n    id:11,\n    first_name: 'Гость',\n    photo_url: 'https://via.placeholder.com/100'\n  };\n\n\n  const [inputText, setInputText] = useState('');\n  const [replyContext, setReplyContext] = useState<ReplyContext | null>(null);\n  const [attachment, setAttachment] = useState<File | null>(null);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const [chatMenu, setChatMenu] = useState<ChatMenu>({\n    chatId: null,\n    isOpen: false,\n    position: null\n  });\n\n\n  //____________MODELS_____________________________________________________________\n  // Это три модели которые есть в backend\n  const [models, setModel] = useState<Model[]>([\n    { id: 'llama2', name: 'Llama 2' },\n    { id: 'deepseek-r1:8b', name: 'DeepSeek' },\n    { id: 'mistral', name: 'Mistral' },\n  ]);\n  const [activeModel, setActiveModel] = useState<string>('llama2');\n  //_____________________________________________________________________________________________\n\n//_____________CHATS__________________________________________________________________________\n  // const [chats, setChats] = useState<Chat[]>([\n  //   { id: '1', title: 'Чат 1', lastMessage: 'Привет! Я твой помощник', model: 'llama2' },\n  //   { id: '2', title: 'Чат 2', lastMessage: 'Чем можем помочь?', model: 'deepseek-r1' },\n  //   { id: '3', title: 'Чат 3', lastMessage: 'Частые вопросы', model: 'mistral' },\n  // ]);\n  const {chats, setChats, activeChat, setActiveChat, createAuto, delChat} = useChats(user.id)\n  const [isCreatingChat, setIsCreatingChat] = useState(false);\n  const [newChatTitle, setNewChatTitle] = useState('');\n\n  // Переключение чата\n  const handleChatChange = async (chatId: string) => {\n    // Удаляем предыдущий чат, если он пустой\n    setChats(prev => {\n      const prevChat = prev.find(c => c.id === activeChat);\n      if (prevChat?.isEmpty) {\n        return prev.filter(c => c.id !== activeChat);\n      }\n      return prev;\n    });\n\n    setActiveChat(chatId);\n    setIsMenuOpen(false);\n\n    // Сбрасываем непрочитанные\n    setChats(prev => prev.map(chat =>\n      chat.id === chatId\n        ? { ...chat, unreadCount: 0 }\n        : chat\n    ));\n\n  };\n\n  // Фокус на поле ввода при создании чата\n  useEffect(() => {\n    if (isCreatingChat && newChatInputRef.current) {\n      newChatInputRef.current.focus();\n    }\n  }, [isCreatingChat]);\n\n  // Создание нового чата\n  const handleCreateChat = async (modelId: string) => {\n    const newChat: Chat = {\n      id: \"0\",\n      title: `Чат ${chats.filter(c => c.model === modelId).length + 1}`,\n      lastMessage: 'Новый чат создан',\n      model: modelId,\n      isEmpty: true, // Теперь это допустимо\n    };\n\n    setChats(prev => [...prev, newChat]);\n    setParent(null)\n    await handleChatChange(newChat.id);\n   \n  };\n\n  // Получение чатов по моделям\n  const getChatsByModel = (modelId: string) => {\n    return chats.filter(chat => chat.model === modelId);\n  };\n\n  // Переименование чата, бэк не поддерживает((\n  const handleRenameChat = (newName: string) => {\n    setChats(prev => prev.map(chat =>\n      chat.id === chatMenu.chatId ? { ...chat, title: newName } : chat\n    ));\n    setChatMenu({ chatId: null, isOpen: false, position: null });\n  };\n\n  // Удаление чата\n  const handleDeleteChat = () => {\n    if (!chatMenu.chatId) return;\n\n    setChats(prev => prev.filter(chat => chat.id !== chatMenu.chatId));\n    if (activeChat === chatMenu.chatId) {\n      const remainingChats = chats.filter(chat => chat.id !== chatMenu.chatId);\n      setActiveChat(remainingChats[0]?.id || '');\n    }\n    delChat(chatMenu.chatId)\n\n    setChatMenu({ chatId: null, isOpen: false, position: null });\n  };\n//_____________________________________________________________________________\n\n  \n\n//__________________MESSAGES_________________________\n  const {messages, setMessages, send} = useMessages(activeChat);\n  const [parentId, setParent] = useState<string | null>(null);\n  const { chunks, error, start } = useStreamMessage(activeChat);\n  const [rootID, setRootID] = useState<string | null>(null)\n  const {upload} = useUploadFile();\n\n\n  useEffect(() => {\n    if (chunks.length > 0) {\n      setMessages(prevMessages => {\n        if (prevMessages.length === 0) return prevMessages;\n  \n        const updatedMessages = [...prevMessages];\n        const lastIndex = updatedMessages.length - 1;\n  \n        updatedMessages[lastIndex] = {\n          ...updatedMessages[lastIndex],\n          content: chunks.join(\"\"),\n        };\n  \n        return updatedMessages;\n      });\n    }\n  }, [chunks, parentId]);\n  // Инициализация с приветственным сообщением\n  useEffect(() => {\n    // TODO: надо сделать не добавляем в массив сообщений а как-нибудь по-другому\n    // const welcomeMessage: Message = {\n    //   id: ,\n    //   parent_id: parent_id,\n    //   content: `Привет! Это чат \"${chats.find(c => c.id === activeChat)?.title}\". Чем могу помочь?`,\n    //   role: 'assistant',\n    //   created_at: String(new Date()),\n    // };\n    // setMessages([welcomeMessage]);\n  }, [activeChat]);\n\n\n  // Автопрокрутка к новым сообщениям\n  useEffect(() => {\n    console.log(messages)\n\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n\n\n  const handleSendMessage = async () => {\n    console.log(res_ids)\n    \n\n    if (!inputText.trim() && !attachment) return;\n    const currentChat = chats.find(chat => chat.id === activeChat);\n    let requestMessage: MessageIn;\n    let newMsg: Message;\n\n    if (!currentChat || currentChat.isEmpty) {\n      // Создание чата с авто названием и делание его активным\n      const newChatId = await createAuto(inputText, { telegram_id: user.id, model: activeModel, title: 'ЧБД' });\n\n      requestMessage = {\n        chat_id: newChatId,\n        parent_id: null,\n        res_ids: res_ids.ids,\n        role: 'user',\n        content: inputText,\n      };\n      newMsg = await send(requestMessage);\n      setParent(newMsg.id);\n\n        // Reset input and attachment\n      setInputText('');\n      setAttachment(null);\n      setReplyContext(null);\n\n      // Start streaming the assistant response\n      const tempId = uuidv4();\n      const newResponse: Message = {\n        id: tempId,\n        parent_id: newMsg.id,\n        res_ids: newMsg.res_ids,\n        role: \"assistant\",\n        content: \"\",\n      }\n      setMessages(prev => [...prev, newResponse])\n\n\n      const fullResponse = await start(newMsg.id);\n\n\n      \n      const requestMessageAs: MessageIn = {\n        chat_id: requestMessage.chat_id,\n        parent_id: newMsg.id,\n        res_ids: newMsg.res_ids,\n        role: \"assistant\",\n        content: fullResponse,\n      };\n\n      const responseAs = await send(requestMessageAs);\n      setRootID(responseAs.id)\n      // Заменить временное сообщение (id === \"0\") на настоящее\n      setMessages(prev =>\n        prev.map(msg =>\n          msg.id === tempId\n            ? responseAs  // ✅ подставляем настоящее сообщение\n            : msg\n        )\n      );\n      setRes({ids:[]})\n      await handleChatChange(newChatId);\n      return;\n    } else {\n      requestMessage = {\n        chat_id: activeChat,\n        parent_id: replyContext ? replyContext.messageId: rootID,\n        res_ids: res_ids.ids,\n        role: 'user',\n        content: inputText,\n      };\n      newMsg = await send(requestMessage);\n      setParent(newMsg.id);\n      setRes({ids:[]})\n\n\n    }\n\n    \n    \n\n    \n\n    // Reset input and attachment\n    setInputText('');\n    setAttachment(null);\n    setReplyContext(null);\n\n    // Start streaming the assistant response\n    const tempId = uuidv4();\n    const newResponse: Message = {\n      id: tempId,\n      parent_id: newMsg.id,\n      res_ids: newMsg.res_ids,\n      role: \"assistant\",\n      content: \"\",\n    }\n    setMessages(prev => [...prev, newResponse])\n\n\n    const fullResponse = await start(newMsg.id);\n\n\n    \n    const requestMessageAs: MessageIn = {\n      chat_id: requestMessage.chat_id,\n      parent_id: newMsg.id,\n      res_ids: newMsg.res_ids,\n      role: \"assistant\",\n      content: fullResponse,\n    };\n\n    const responseAs = await send(requestMessageAs);\n    setRootID(responseAs.id)\n    // Заменить временное сообщение (id === \"0\") на настоящее\n    setMessages(prev =>\n      prev.map(msg =>\n        msg.id === tempId\n          ? responseAs  // ✅ подставляем настоящее сообщение\n          : msg\n      )\n    );\n\n    \n\n    // Обновляем последнее сообщение в списке чатов\n    setChats(prev => prev.map(chat =>\n      chat.id === activeChat\n        ? { ...chat, lastMessage: inputText || 'Вложение', unreadCount: 0 }\n        : chat\n    ));\n  };\n\n\n\n\n\n\n  const [lastRenderedMessageId, setLastRenderedMessageId] = useState<string | null>(null);\n\n  const [childIndexes, setChildIndexes] = useState<{ [parentId: string]: number }>({});\n\n//___________________________________________________________\n\n\n\n  const [res_ids, setRes] = useState<{ ids: string[] }>({ids:[]})\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const newChatInputRef = useRef<HTMLInputElement>(null);\n\n  // Темы\n  useEffect(() => {\n    // Простая проверка темы без использования Telegram API\n    const isDarkMode = window.matchMedia?.('(prefers-color-scheme: dark)').matches;\n    const theme = isDarkMode ? 'dark' : 'light';\n\n    // Применяем тему\n    document.body.classList.toggle('dark-theme', theme === 'dark');\n  }, []);\n\n  // Упрощенная функция смены темы\n  const toggleTheme = () => {\n    const newTheme = document.body.classList.contains('dark-theme') ? 'light' : 'dark';\n    document.body.classList.toggle('dark-theme', newTheme === 'dark');\n  };\n\n\n\n\n\n  \n\n  \n  // Генерация ответа бота\n  const generateBotResponse = (userText: string, context: ReplyContext | null): string => {\n    const responses = [\n      \"Я понял ваш запрос. Давайте обсудим это подробнее.\",\n      \"Интересный вопрос! Давайте разберемся вместе.\",\n      \"Спасибо за ваше сообщение. Я уже работаю над этим.\",\n      \"Хорошо, я записал эту информацию. Что еще вас интересует?\",\n      \"Отличное замечание! Давайте продолжим наш разговор.\"\n    ];\n\n    if (context) {\n      return `Отвечая на ваше сообщение \"${context.messageText}\": ${responses[Math.floor(Math.random() * responses.length)]}`;\n    }\n\n    return responses[Math.floor(Math.random() * responses.length)];\n  };\n\n  // Обработчик вложения файла\n  const handleAttachment = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) {\n      setAttachment(e.target.files[0]);\n      const res = await upload(activeChat, e.target.files[0])\n      setRes(res)\n      console.log(res)\n    }\n  };\n\n  // Обработчик нажатия клавиш\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  \n  const handleOpenMenu = (chatId: string, e: React.MouseEvent) => {\n    e.stopPropagation();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setChatMenu({\n      chatId,\n      isOpen: true,\n      position: { top: rect.bottom + 5, left: rect.left - 100 }\n    });\n  };\n\n\n\n  return (\n    <div className=\"chat-app\">\n      {/* Заголовок чата - убираем кнопку создания */}\n      <div className=\"chat-header\">\n        <button className=\"menu-button\" onClick={() => setIsMenuOpen(!isMenuOpen)}>\n          ☰\n        </button>\n        <h2>{chats.find(c => c.id === activeChat)?.title || 'Выберите чат'}</h2>\n        {activeChat && (\n          <button\n            className=\"create-chat-button\"\n            onClick={() => {\n              const currentModel = chats.find(c => c.id === activeChat)?.model || activeModel;\n              handleCreateChat(currentModel);\n            }}\n          >\n            ＋\n          </button>\n        )}\n      </div>\n\n      {/* Боковое меню */}\n      <div className={`side-menu ${isMenuOpen ? 'open' : ''}`}>\n        <button\n          className=\"settings-button\"\n          onClick={() => setSettings(prev => ({ ...prev, isOpen: true }))}\n        >\n          ⚙️\n        </button>\n        {settings.isOpen && (\n          <div className=\"settings-modal\">\n            <div className=\"settings-content\">\n              <button\n                className=\"close-settings\"\n                onClick={() => setSettings(prev => ({ ...prev, isOpen: false }))}\n              >\n                ×\n              </button>\n\n              <div className=\"user-profile\">\n                <img\n                  src={user.photo_url || 'https://via.placeholder.com/100'}\n                  alt=\"Аватар\"\n                  className=\"user-avatar\"\n                  onError={(e) => {\n                    (e.target as HTMLImageElement).src = 'https://via.placeholder.com/100';\n                  }}\n                />\n                <h3>\n                  {[user.first_name, user.last_name]\n                    .filter(Boolean)\n                    .join(' ') || 'Пользователь'}\n                </h3>\n                {user.username && <p>@{user.username}</p>}\n                {user.language_code && <p>Язык: {user.language_code.toUpperCase()}</p>}\n              </div>\n\n              <div className=\"theme-switcher\">\n                <button\n                  onClick={() => {\n                    const newTheme = settings.theme === 'light' ? 'dark' : 'light';\n                    setSettings(prev => ({ ...prev, theme: newTheme }));\n                    // Здесь можно добавить логику смены темы в Telegram WebApp\n                  }}\n                >\n                  {settings.theme === 'light' ? '🌙 Тёмная тема' : '☀️ Светлая тема'}\n                </button>\n              </div>\n            </div>\n            <div\n              className=\"settings-overlay\"\n              onClick={() => setSettings(prev => ({ ...prev, isOpen: false }))}\n            />\n          </div>\n        )}\n\n        <div className=\"menu-header\">\n          <h3>Мои чаты</h3>\n          <button className=\"close-menu\" onClick={() => setIsMenuOpen(false)}>\n            ×\n          </button>\n        </div>\n\n        <div className=\"categories-tabs\">\n          {models.map(model => (\n            <button\n              key={model.id}\n              className={`category-tab ${activeModel === model.id ? 'active' : ''}`}\n              onClick={() => setActiveModel(model.id)}\n            >\n              {model.name}\n            </button>\n          ))}\n        </div>\n\n        <div className=\"chat-list\">\n          {/* Добавляем кнопку создания чата в категорию */}\n          <button\n            className=\"create-chat-in-category small\"\n            onClick={() => handleCreateChat(activeModel)}\n          >\n            ＋ Создать чат\n          </button>\n\n          {getChatsByModel(activeModel).length > 0 ? (\n            [...getChatsByModel(activeModel)].reverse().map(chat => (\n              <div\n                key={chat.id}\n                className={`chat-item ${activeChat === chat.id ? 'active' : ''}`}\n                onClick={() => handleChatChange(chat.id)}\n              >\n                <div className=\"chat-info\">\n                  <div className=\"chat-title\">{chat.title}</div>\n                  <div className=\"chat-preview\">\n                    {chat.lastMessage?.substring(0, 30)}{chat.lastMessage && chat.lastMessage.length > 30 ? '...' : ''}\n                  </div>\n                </div>\n\n                <div className=\"chat-actions\">\n                  <button className=\"chat-menu-button\" onClick={(e) => handleOpenMenu(chat.id, e)}>\n                    ⋮\n                  </button>\n                  {chatMenu.isOpen && (\n                    <>\n                      <div\n                        className=\"menu-overlay\"\n                        onClick={() => setChatMenu({ chatId: null, isOpen: false, position: null })}\n                      />\n                      <div\n                        className=\"chat-context-menu\"\n                        style={{\n                          top: `${chatMenu.position?.top}px`,\n                          left: `${chatMenu.position?.left}px`\n                        }}\n                      >\n                        <button\n                          className=\"menu-item\"\n                          onClick={() => {\n                            const newName = prompt('Введите новое название:',\n                              chats.find(c => c.id === chatMenu.chatId)?.title);\n                            if (newName) handleRenameChat(newName);\n                          }}\n                        >\n                          Переименовать\n                        </button>\n                        <button\n                          className=\"menu-item delete\"\n                          onClick={handleDeleteChat}\n                        >\n                          Удалить чат\n                        </button>\n                      </div>\n                    </>\n                  )}\n                </div>\n              </div>\n            ))\n          ) : (\n            <div className=\"no-chats\">\n              Нет чатов в этой категории\n            </div>\n          )}\n        </div>\n      </div>\n\n\n      {/* Затемнение фона при открытом меню */}\n      {isMenuOpen && (\n        <div className=\"menu-overlay\" onClick={() => setIsMenuOpen(false)} />\n      )}\n\n\n<div className=\"messages-container\">\n    {messages\n      .filter(msg => msg.parent_id === null)\n      .map((root) => (\n        <MessageThread\n          key={root.id}\n          message={root}\n          messages={messages}\n          childIndexes={childIndexes}\n          setChildIndexes={setChildIndexes}\n          onLastMessageIdChange={(id) => {\n            console.log('Current last message ID:', id);\n            setRootID(id)\n          }}\n          setReplyContext={setReplyContext}\n        />\n      ))}\n  </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      {/* Панель ввода (только если выбран чат) */}\n      {activeChat && (\n        <div className=\"input-area\">\n          {replyContext && (\n            <div className=\"reply-preview\">\n              Ответ на: {replyContext.messageText}\n              <button onClick={() => setReplyContext(null)}>×</button>\n            </div>\n          )}\n\n          <div className=\"input-container\">\n            <button\n              className=\"attach-button\"\n              onClick={() => fileInputRef.current?.click()}\n            >\n              📎\n            </button>\n\n            <input\n              type=\"file\"\n              ref={fileInputRef}\n              onChange={handleAttachment}\n              style={{ display: 'none' }}\n              accept=\".pdf\"\n            />\n\n            <textarea\n              value={inputText}\n              onChange={(e) => setInputText(e.target.value)}\n              onKeyDown={handleKeyDown}\n              placeholder=\"Напишите сообщение...\"\n              rows={1}\n            />\n\n            <button\n              className=\"send-button\"\n              onClick={handleSendMessage}\n              disabled={!inputText.trim() && !attachment}\n            >\n              {attachment ? '📤' : '➤'}\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}