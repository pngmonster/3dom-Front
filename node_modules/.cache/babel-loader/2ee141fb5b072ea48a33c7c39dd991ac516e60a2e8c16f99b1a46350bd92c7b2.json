{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/hooks/useMessages.ts\nimport { useState, useEffect, useCallback } from 'react';\nimport { getMessages, createMessage, getMessage } from '../api/messages';\nimport { transformMessageOut, transformMessages } from '../utils/transform';\nexport function useMessages(chatId) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [parent_id, setParent] = useState(null);\n  const [selectedParentId, setSelectedParentId] = useState(null);\n  const [selectedMsgIdx, setSelectedMsgIdx] = useState(0);\n  useEffect(() => {\n    console.log(chatId);\n    fetchMessages();\n  }, [chatId]);\n  const fetchMessages = async () => {\n    try {\n      if (!chatId) {\n        return;\n      }\n      const res = await getMessages(chatId);\n      const trans = transformMessages(res);\n      setMessages(trans);\n      const lastMessage = trans.at(-1);\n      if (!lastMessage) {\n        return;\n      }\n      setParent(lastMessage.id);\n\n      // по умолчанию показываем корневые\n      setSelectedParentId(null);\n      setSelectedMsgIdx(0);\n    } catch (err) {\n      console.error('Ошибка при получении чатов:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const send = useCallback(async msg => {\n    const newID = await createMessage(msg);\n    const newMsg = await getMessage(newID);\n    setMessages(prev => [...prev, transformMessageOut(newMsg)]);\n    return transformMessageOut(newMsg);\n  }, []);\n  return {\n    messages,\n    setMessages,\n    loading,\n    error,\n    send,\n    parent_id,\n    setParent,\n    selectedMsgIdx,\n    selectedParentId,\n    setSelectedMsgIdx,\n    setSelectedParentId\n  };\n}\n_s(useMessages, \"IcXFpQFJJO6JG0y+323cze10OYc=\");\nexport function useStreamMessage(id) {\n  _s2();\n  const [chunks, setChunks] = useState([]);\n  const [error, setError] = useState(null);\n  const start = useCallback(() => {\n    const evtSource = new EventSource(`/api/message-service/stream?id=${encodeURIComponent(id)}`);\n    evtSource.onmessage = e => {\n      // e.data — очередная часть ответа\n      setChunks(prev => [...prev, e.data]);\n    };\n    evtSource.onerror = e => {\n      setError('Stream error');\n      evtSource.close();\n    };\n    return () => {\n      evtSource.close();\n    };\n  }, [id]);\n  return {\n    chunks,\n    error,\n    start\n  };\n}\n_s2(useStreamMessage, \"ZZEYizF44Dicu1ckwbf8AGghMdY=\");","map":{"version":3,"names":["useState","useEffect","useCallback","getMessages","createMessage","getMessage","transformMessageOut","transformMessages","useMessages","chatId","_s","messages","setMessages","loading","setLoading","error","setError","parent_id","setParent","selectedParentId","setSelectedParentId","selectedMsgIdx","setSelectedMsgIdx","console","log","fetchMessages","res","trans","lastMessage","at","id","err","send","msg","newID","newMsg","prev","useStreamMessage","_s2","chunks","setChunks","start","evtSource","EventSource","encodeURIComponent","onmessage","e","data","onerror","close"],"sources":["/home/giicoo/projects/3DOM FRONT/3dom-Front/src/hooks/useMessages.ts"],"sourcesContent":["// src/hooks/useMessages.ts\nimport { useState, useEffect, useCallback } from 'react';\nimport {\n  getMessages,\n  createMessage,\n  getMessage,\n} from '../api/messages';\nimport { MessageIn, MessageOut } from '../api/types';\nimport { Message } from '../types';\nimport { transformMessageOut, transformMessages } from '../utils/transform';\n\nexport function useMessages(chatId: string | null) {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [parent_id, setParent] = useState<string | null>(null)\n  \n  const [selectedParentId, setSelectedParentId] = useState<string | null>(null);\n  const [selectedMsgIdx, setSelectedMsgIdx] = useState(0);\n\n  useEffect(() => {\n    console.log(chatId)\n    fetchMessages()\n  }, [chatId]);\n\n  const fetchMessages = async () => {\n      try {\n        if (!chatId) { return; }\n\n        const res = await getMessages(chatId);\n        const trans = transformMessages(res)\n        setMessages(trans);\n\n        const lastMessage = trans.at(-1) \n        if (!lastMessage) { return; }\n        setParent(lastMessage.id)\n\n        // по умолчанию показываем корневые\n        setSelectedParentId(null);\n        setSelectedMsgIdx(0);\n\n      } catch (err) {\n        console.error('Ошибка при получении чатов:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n  const send = useCallback(\n    async (msg: MessageIn) => {\n      const newID = await createMessage(msg);\n      const newMsg = await getMessage(newID)\n      setMessages(prev => [...prev, transformMessageOut(newMsg)]);\n      return transformMessageOut(newMsg);\n    },\n    []\n  );\n\n  return { messages, setMessages, loading, error, send, parent_id, setParent, selectedMsgIdx, selectedParentId, setSelectedMsgIdx, setSelectedParentId};\n}\n\n\nexport function useStreamMessage(id: string) {\n    const [chunks, setChunks] = useState<string[]>([]);\n    const [error, setError] = useState<string | null>(null);\n  \n    const start = useCallback(() => {\n      const evtSource = new EventSource(`/api/message-service/stream?id=${encodeURIComponent(id)}`);\n  \n      evtSource.onmessage = e => {\n        // e.data — очередная часть ответа\n        setChunks(prev => [...prev, e.data]);\n      };\n  \n      evtSource.onerror = e => {\n        setError('Stream error');\n        evtSource.close();\n      };\n  \n      return () => {\n        evtSource.close();\n      };\n    }, [id]);\n\n    return { chunks, error, start };\n}  \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}