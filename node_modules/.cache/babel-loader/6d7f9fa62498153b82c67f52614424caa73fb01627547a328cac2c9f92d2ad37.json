{"ast":null,"code":"var _jsxFileName = \"/home/giicoo/projects/3DOM FRONT/3dom-Front/src/components/message.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MessageThread = ({\n  message,\n  messages,\n  childIndexes,\n  setChildIndexes\n}) => {\n  _s();\n  const children = messages.filter(m => m.parent_id === message.id);\n  const index = childIndexes[message.id] || 0;\n\n  // Используем ref для отслеживания последнего сообщения\n  const lastMessageRef = useRef(null);\n  const handleNext = () => {\n    setChildIndexes(prev => ({\n      ...prev,\n      [message.id]: (index + 1) % children.length\n    }));\n  };\n  const handlePrev = () => {\n    setChildIndexes(prev => ({\n      ...prev,\n      [message.id]: (index - 1 + children.length) % children.length\n    }));\n  };\n\n  // Эффект для прокрутки в конец при рендере нового сообщения\n  useEffect(() => {\n    if (lastMessageRef.current) {\n      lastMessageRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [children, index]); // Этот эффект срабатывает каждый раз, когда меняются дети или индекс.\n  console.log(lastMessageRef.current);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [message.parent_id === \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: lastMessageRef,\n      className: `message ${message.role}`,\n      children: message.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), children.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.role}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: children[index].content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), children.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePrev,\n            children: \"\\u25C0\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNext,\n            children: \"\\u25B6\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MessageThread, {\n        message: children[index],\n        messages: messages,\n        childIndexes: childIndexes,\n        setChildIndexes: setChildIndexes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_s(MessageThread, \"Dd4FLe2mEwyCGo7sEMvT078H9sg=\");\n_c = MessageThread;\nvar _c;\n$RefreshReg$(_c, \"MessageThread\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","MessageThread","message","messages","childIndexes","setChildIndexes","_s","children","filter","m","parent_id","id","index","lastMessageRef","handleNext","prev","length","handlePrev","current","scrollIntoView","behavior","console","log","ref","className","role","content","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/giicoo/projects/3DOM FRONT/3dom-Front/src/components/message.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport type { Message } from '../types';\n\ntype MessageThreadProps = {\n  message: Message;\n  messages: Message[];\n  childIndexes: { [parentId: string]: number };\n  setChildIndexes: React.Dispatch<React.SetStateAction<{ [parentId: string]: number }>>;\n};\n\nexport const MessageThread: React.FC<MessageThreadProps> = ({\n  message,\n  messages,\n  childIndexes,\n  setChildIndexes,\n}) => {\n  const children = messages.filter((m) => m.parent_id === message.id);\n  const index = childIndexes[message.id] || 0;\n  \n  // Используем ref для отслеживания последнего сообщения\n  const lastMessageRef = useRef<HTMLDivElement | null>(null);\n\n  const handleNext = () => {\n    setChildIndexes((prev) => ({\n      ...prev,\n      [message.id]: (index + 1) % children.length,\n    }));\n  };\n\n  const handlePrev = () => {\n    setChildIndexes((prev) => ({\n      ...prev,\n      [message.id]: (index - 1 + children.length) % children.length,\n    }));\n  };\n\n  // Эффект для прокрутки в конец при рендере нового сообщения\n  useEffect(() => {\n    if (lastMessageRef.current) {\n      lastMessageRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [children, index]); // Этот эффект срабатывает каждый раз, когда меняются дети или индекс.\n  console.log(lastMessageRef.current)\n  return (\n    <>\n      {/* Родительское сообщение */}\n      {message.parent_id === \"\" && (\n        <div ref={lastMessageRef} className={`message ${message.role}`}>\n          {message.content}\n        </div>\n      )}\n\n      {/* Если есть дети — рендерим их как отдельные блоки */}\n      {children.length > 0 && (\n        <>\n          <div className={`message ${message.role}`}>\n            <div className=\"message-content\">\n              {children[index].content}\n            </div>\n            {children.length > 1 && (\n              <div className=\"message-controls\">\n                <button onClick={handlePrev}>◀️</button>\n                <button onClick={handleNext}>▶️</button>\n              </div>\n            )}\n          </div>\n\n          {/* Рекурсивный рендер для детей */}\n          <MessageThread\n            message={children[index]}\n            messages={messages}\n            childIndexes={childIndexes}\n            setChildIndexes={setChildIndexes}\n          />\n        </>\n      )}\n    </>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}