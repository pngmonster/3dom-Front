{"ast":null,"code":"var _jsxFileName = \"/home/giicoo/projects/3DOM FRONT/3dom-Front/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './ChatApp.css';\nimport { useChats } from './hooks/useChats';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatApp = () => {\n  _s();\n  var _window$Telegram, _window$Telegram$WebA, _window$Telegram$WebA2, _chats$find3;\n  const [settings, setSettings] = useState({\n    isOpen: false,\n    theme: 'light'\n  });\n\n  // Получаем данные пользователя из Telegram WebApp\n  const user = ((_window$Telegram = window.Telegram) === null || _window$Telegram === void 0 ? void 0 : (_window$Telegram$WebA = _window$Telegram.WebApp) === null || _window$Telegram$WebA === void 0 ? void 0 : (_window$Telegram$WebA2 = _window$Telegram$WebA.initDataUnsafe) === null || _window$Telegram$WebA2 === void 0 ? void 0 : _window$Telegram$WebA2.user) || {\n    id: 11,\n    first_name: 'Гость',\n    photo_url: 'https://via.placeholder.com/100'\n  };\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [replyContext, setReplyContext] = useState(null);\n  const [attachment, setAttachment] = useState(null);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [chatMenu, setChatMenu] = useState({\n    chatId: null,\n    isOpen: false,\n    position: null\n  });\n\n  //____________MODELS_____________________________________________________________\n  // Это три модели которые есть в backend\n  const [models, setModel] = useState([{\n    id: 'llama2',\n    name: 'Llama 2'\n  }, {\n    id: 'deepseek-r1',\n    name: 'DeepSeek'\n  }, {\n    id: 'mistral',\n    name: 'Mistral'\n  }]);\n  const [activeModel, setActiveModel] = useState('llama2');\n  //_____________________________________________________________________________________________\n\n  //_____________CHATS__________________________________________________________________________\n  // const [chats, setChats] = useState<Chat[]>([\n  //   { id: '1', title: 'Чат 1', lastMessage: 'Привет! Я твой помощник', model: 'llama2' },\n  //   { id: '2', title: 'Чат 2', lastMessage: 'Чем можем помочь?', model: 'deepseek-r1' },\n  //   { id: '3', title: 'Чат 3', lastMessage: 'Частые вопросы', model: 'mistral' },\n  // ]);\n  const {\n    chats,\n    setChats,\n    activeChat,\n    setActiveChat,\n    createAuto,\n    delChat\n  } = useChats(user.id);\n  const [isCreatingChat, setIsCreatingChat] = useState(false);\n  const [newChatTitle, setNewChatTitle] = useState('');\n\n  // Переключение чата\n  const handleChatChange = chatId => {\n    var _chats$find;\n    // Удаляем предыдущий чат, если он пустой\n    setChats(prev => {\n      const prevChat = prev.find(c => c.id === activeChat);\n      if (prevChat !== null && prevChat !== void 0 && prevChat.isEmpty) {\n        return prev.filter(c => c.id !== activeChat);\n      }\n      return prev;\n    });\n    setActiveChat(chatId);\n    setIsMenuOpen(false);\n    setMessages([{\n      id: '1',\n      text: `Добро пожаловать в чат \"${(_chats$find = chats.find(c => c.id === chatId)) === null || _chats$find === void 0 ? void 0 : _chats$find.title}\"!`,\n      sender: 'bot',\n      timestamp: new Date()\n    }]);\n\n    // Сбрасываем непрочитанные\n    setChats(prev => prev.map(chat => chat.id === chatId ? {\n      ...chat,\n      unreadCount: 0\n    } : chat));\n  };\n\n  // Фокус на поле ввода при создании чата\n  useEffect(() => {\n    if (isCreatingChat && newChatInputRef.current) {\n      newChatInputRef.current.focus();\n    }\n  }, [isCreatingChat]);\n\n  // Создание нового чата\n  const handleCreateChat = modelId => {\n    const newChat = {\n      id: Date.now().toString(),\n      title: `Чат ${chats.filter(c => c.model === modelId).length + 1}`,\n      lastMessage: 'Новый чат создан',\n      model: modelId,\n      isEmpty: true // Теперь это допустимо\n    };\n    setChats(prev => [...prev, newChat]);\n    handleChatChange(newChat.id);\n  };\n\n  // Получение чатов по моделям\n  const getChatsByModel = modelId => {\n    return chats.filter(chat => chat.model === modelId);\n  };\n\n  // Переименование чата, бэк не поддерживает((\n  const handleRenameChat = newName => {\n    setChats(prev => prev.map(chat => chat.id === chatMenu.chatId ? {\n      ...chat,\n      title: newName\n    } : chat));\n    setChatMenu({\n      chatId: null,\n      isOpen: false,\n      position: null\n    });\n  };\n\n  // Удаление чата\n  const handleDeleteChat = () => {\n    if (!chatMenu.chatId) return;\n    setChats(prev => prev.filter(chat => chat.id !== chatMenu.chatId));\n    if (activeChat === chatMenu.chatId) {\n      var _remainingChats$;\n      const remainingChats = chats.filter(chat => chat.id !== chatMenu.chatId);\n      setActiveChat(((_remainingChats$ = remainingChats[0]) === null || _remainingChats$ === void 0 ? void 0 : _remainingChats$.id) || '');\n    }\n    setChatMenu({\n      chatId: null,\n      isOpen: false,\n      position: null\n    });\n    delChat();\n  };\n  //_____________________________________________________________________________\n\n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const newChatInputRef = useRef(null);\n\n  // Темы\n  useEffect(() => {\n    var _window$matchMedia, _window;\n    // Простая проверка темы без использования Telegram API\n    const isDarkMode = (_window$matchMedia = (_window = window).matchMedia) === null || _window$matchMedia === void 0 ? void 0 : _window$matchMedia.call(_window, '(prefers-color-scheme: dark)').matches;\n    const theme = isDarkMode ? 'dark' : 'light';\n\n    // Применяем тему\n    document.body.classList.toggle('dark-theme', theme === 'dark');\n  }, []);\n\n  // Упрощенная функция смены темы\n  const toggleTheme = () => {\n    const newTheme = document.body.classList.contains('dark-theme') ? 'light' : 'dark';\n    document.body.classList.toggle('dark-theme', newTheme === 'dark');\n  };\n\n  // Инициализация с приветственным сообщением\n  useEffect(() => {\n    var _chats$find2;\n    const welcomeMessage = {\n      id: '1',\n      text: `Привет! Это чат \"${(_chats$find2 = chats.find(c => c.id === activeChat)) === null || _chats$find2 === void 0 ? void 0 : _chats$find2.title}\". Чем могу помочь?`,\n      sender: 'bot',\n      timestamp: new Date()\n    };\n    setMessages([welcomeMessage]);\n  }, [activeChat]);\n\n  // Автопрокрутка к новым сообщениям\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Обработчик отправки сообщения\n  const handleSendMessage = async () => {\n    if (!inputText.trim() && !attachment) return;\n    const currentChat = chats.find(chat => chat.id === activeChat);\n    if (currentChat !== null && currentChat !== void 0 && currentChat.isEmpty || currentChat === undefined) {\n      //Создание чата с авто названием и делание его активным\n      const res = await createAuto(inputText, {\n        telegram_id: user.id,\n        model: activeModel,\n        title: \"ЧБД\"\n      });\n      handleChatChange(res);\n    }\n    const userMessage = {\n      id: Date.now().toString(),\n      text: inputText,\n      sender: 'user',\n      timestamp: new Date(),\n      replyTo: replyContext === null || replyContext === void 0 ? void 0 : replyContext.messageId\n    };\n    if (attachment) {\n      const attachmentType = attachment.type.startsWith('image/') ? 'image' : 'document';\n      userMessage.attachment = {\n        type: attachmentType,\n        url: URL.createObjectURL(attachment),\n        name: attachment.name\n      };\n    }\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    setAttachment(null);\n    setReplyContext(null);\n\n    // Обновляем последнее сообщение в списке чатов\n    setChats(prev => prev.map(chat => chat.id === activeChat ? {\n      ...chat,\n      lastMessage: inputText || 'Вложение',\n      unreadCount: 0\n    } : chat));\n\n    // Имитация ответа бота\n    setTimeout(() => {\n      const botResponse = {\n        id: (Date.now() + 1).toString(),\n        text: generateBotResponse(inputText, replyContext),\n        sender: 'bot',\n        timestamp: new Date(),\n        replyTo: userMessage.id\n      };\n      setMessages(prev => [...prev, botResponse]);\n    }, 1000);\n  };\n\n  // Генерация ответа бота\n  const generateBotResponse = (userText, context) => {\n    const responses = [\"Я понял ваш запрос. Давайте обсудим это подробнее.\", \"Интересный вопрос! Давайте разберемся вместе.\", \"Спасибо за ваше сообщение. Я уже работаю над этим.\", \"Хорошо, я записал эту информацию. Что еще вас интересует?\", \"Отличное замечание! Давайте продолжим наш разговор.\"];\n    if (context) {\n      return `Отвечая на ваше сообщение \"${context.messageText}\": ${responses[Math.floor(Math.random() * responses.length)]}`;\n    }\n    return responses[Math.floor(Math.random() * responses.length)];\n  };\n\n  // Обработчик вложения файла\n  const handleAttachment = e => {\n    if (e.target.files && e.target.files[0]) {\n      setAttachment(e.target.files[0]);\n    }\n  };\n\n  // Обработчик нажатия клавиш\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const handleOpenMenu = (chatId, e) => {\n    e.stopPropagation();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setChatMenu({\n      chatId,\n      isOpen: true,\n      position: {\n        top: rect.bottom + 5,\n        left: rect.left - 100\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"menu-button\",\n        onClick: () => setIsMenuOpen(!isMenuOpen),\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: ((_chats$find3 = chats.find(c => c.id === activeChat)) === null || _chats$find3 === void 0 ? void 0 : _chats$find3.title) || 'Выберите чат'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), activeChat && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-chat-button\",\n        onClick: () => {\n          var _chats$find4;\n          const currentModel = ((_chats$find4 = chats.find(c => c.id === activeChat)) === null || _chats$find4 === void 0 ? void 0 : _chats$find4.model) || activeModel;\n          handleCreateChat(currentModel);\n        },\n        children: \"\\uFF0B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `side-menu ${isMenuOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"settings-button\",\n        onClick: () => setSettings(prev => ({\n          ...prev,\n          isOpen: true\n        })),\n        children: \"\\u2699\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), settings.isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-settings\",\n            onClick: () => setSettings(prev => ({\n              ...prev,\n              isOpen: false\n            })),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-profile\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.photo_url || 'https://via.placeholder.com/100',\n              alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\",\n              className: \"user-avatar\",\n              onError: e => {\n                e.target.src = 'https://via.placeholder.com/100';\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [user.first_name, user.last_name].filter(Boolean).join(' ') || 'Пользователь'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this), user.username && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"@\", user.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 35\n            }, this), user.language_code && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u042F\\u0437\\u044B\\u043A: \", user.language_code.toUpperCase()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"theme-switcher\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const newTheme = settings.theme === 'light' ? 'dark' : 'light';\n                setSettings(prev => ({\n                  ...prev,\n                  theme: newTheme\n                }));\n                // Здесь можно добавить логику смены темы в Telegram WebApp\n              },\n              children: settings.theme === 'light' ? '🌙 Тёмная тема' : '☀️ Светлая тема'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-overlay\",\n          onClick: () => setSettings(prev => ({\n            ...prev,\n            isOpen: false\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u041C\\u043E\\u0438 \\u0447\\u0430\\u0442\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-menu\",\n          onClick: () => setIsMenuOpen(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories-tabs\",\n        children: models.map(model => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `category-tab ${activeModel === model.id ? 'active' : ''}`,\n          onClick: () => setActiveModel(model.id),\n          children: model.name\n        }, model.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-chat-in-category small\",\n          onClick: () => handleCreateChat(activeModel),\n          children: \"\\uFF0B \\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0447\\u0430\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), getChatsByModel(activeModel).length > 0 ? getChatsByModel(activeModel).map(chat => {\n          var _chat$lastMessage, _chatMenu$position, _chatMenu$position2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-item ${activeChat === chat.id ? 'active' : ''}`,\n            onClick: () => handleChatChange(chat.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-title\",\n                children: chat.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-preview\",\n                children: [(_chat$lastMessage = chat.lastMessage) === null || _chat$lastMessage === void 0 ? void 0 : _chat$lastMessage.substring(0, 30), chat.lastMessage && chat.lastMessage.length > 30 ? '...' : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chat-menu-button\",\n                onClick: e => handleOpenMenu(chat.id, e),\n                children: \"\\u22EE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 19\n              }, this), chatMenu.isOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"menu-overlay\",\n                  onClick: () => setChatMenu({\n                    chatId: null,\n                    isOpen: false,\n                    position: null\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"chat-context-menu\",\n                  style: {\n                    top: `${(_chatMenu$position = chatMenu.position) === null || _chatMenu$position === void 0 ? void 0 : _chatMenu$position.top}px`,\n                    left: `${(_chatMenu$position2 = chatMenu.position) === null || _chatMenu$position2 === void 0 ? void 0 : _chatMenu$position2.left}px`\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"menu-item\",\n                    onClick: () => {\n                      var _chats$find5;\n                      const newName = prompt('Введите новое название:', (_chats$find5 = chats.find(c => c.id === chatMenu.chatId)) === null || _chats$find5 === void 0 ? void 0 : _chats$find5.title);\n                      if (newName) handleRenameChat(newName);\n                    },\n                    children: \"\\u041F\\u0435\\u0440\\u0435\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u0442\\u044C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"menu-item delete\",\n                    onClick: handleDeleteChat,\n                    children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0447\\u0430\\u0442\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 17\n            }, this)]\n          }, chat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-chats\",\n          children: \"\\u041D\\u0435\\u0442 \\u0447\\u0430\\u0442\\u043E\\u0432 \\u0432 \\u044D\\u0442\\u043E\\u0439 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), isMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-overlay\",\n      onClick: () => setIsMenuOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [activeChat ? messages.map(message => {\n        var _messages$find;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          onClick: () => setReplyContext({\n            messageId: message.id,\n            messageText: message.text\n          }),\n          children: [message.replyTo && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reply-context\",\n            children: (_messages$find = messages.find(m => m.id === message.replyTo)) === null || _messages$find === void 0 ? void 0 : _messages$find.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 17\n          }, this), message.attachment && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"attachment\",\n            children: message.attachment.type === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: message.attachment.url,\n              alt: \"\\u041F\\u0440\\u0438\\u043A\\u0440\\u0435\\u043F\\u043B\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n              href: message.attachment.url,\n              download: true,\n              children: [\"\\uD83D\\uDCC4 \", message.attachment.name || 'Документ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-text\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-time\",\n            children: message.timestamp.toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-chat-selected\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0447\\u0430\\u0442 \\u0438\\u0437 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430 \\u0438\\u043B\\u0438 \\u0441\\u043E\\u0437\\u0434\\u0430\\u0439\\u0442\\u0435 \\u043D\\u043E\\u0432\\u044B\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this), activeChat && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [replyContext && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reply-preview\",\n        children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442 \\u043D\\u0430: \", replyContext.messageText, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setReplyContext(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"attach-button\",\n          onClick: () => {\n            var _fileInputRef$current;\n            return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n          },\n          children: \"\\uD83D\\uDCCE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInputRef,\n          onChange: handleAttachment,\n          style: {\n            display: 'none'\n          },\n          accept: \"image/*,.pdf,.doc,.docx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          onKeyDown: handleKeyDown,\n          placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n          rows: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSendMessage,\n          disabled: !inputText.trim() && !attachment,\n          children: attachment ? '📤' : '➤'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatApp, \"4A2AB89HPIVlXh5EmUMnFkvPv2I=\", false, function () {\n  return [useChats];\n});\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useChats","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatApp","_s","_window$Telegram","_window$Telegram$WebA","_window$Telegram$WebA2","_chats$find3","settings","setSettings","isOpen","theme","user","window","Telegram","WebApp","initDataUnsafe","id","first_name","photo_url","messages","setMessages","inputText","setInputText","replyContext","setReplyContext","attachment","setAttachment","isMenuOpen","setIsMenuOpen","chatMenu","setChatMenu","chatId","position","models","setModel","name","activeModel","setActiveModel","chats","setChats","activeChat","setActiveChat","createAuto","delChat","isCreatingChat","setIsCreatingChat","newChatTitle","setNewChatTitle","handleChatChange","_chats$find","prev","prevChat","find","c","isEmpty","filter","text","title","sender","timestamp","Date","map","chat","unreadCount","newChatInputRef","current","focus","handleCreateChat","modelId","newChat","now","toString","model","length","lastMessage","getChatsByModel","handleRenameChat","newName","handleDeleteChat","_remainingChats$","remainingChats","fileInputRef","messagesEndRef","_window$matchMedia","_window","isDarkMode","matchMedia","call","matches","document","body","classList","toggle","toggleTheme","newTheme","contains","_chats$find2","welcomeMessage","_messagesEndRef$curre","scrollIntoView","behavior","handleSendMessage","trim","currentChat","undefined","res","telegram_id","userMessage","replyTo","messageId","attachmentType","type","startsWith","url","URL","createObjectURL","setTimeout","botResponse","generateBotResponse","userText","context","responses","messageText","Math","floor","random","handleAttachment","e","target","files","handleKeyDown","key","shiftKey","preventDefault","handleOpenMenu","stopPropagation","rect","currentTarget","getBoundingClientRect","top","bottom","left","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_chats$find4","currentModel","src","alt","onError","last_name","Boolean","join","username","language_code","toUpperCase","_chat$lastMessage","_chatMenu$position","_chatMenu$position2","substring","style","_chats$find5","prompt","message","_messages$find","m","href","download","toLocaleTimeString","hour","minute","ref","_fileInputRef$current","click","onChange","display","accept","value","onKeyDown","placeholder","rows","disabled","_c","$RefreshReg$"],"sources":["/home/giicoo/projects/3DOM FRONT/3dom-Front/src/App.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './ChatApp.css';\nimport { Category, Chat, ChatMenu, Message, ReplyContext, Settings, TelegramUser } from './types';\nimport { useChats } from './hooks/useChats';\n\n\n\nconst ChatApp: React.FC = () => {\n  const [settings, setSettings] = useState<Settings>({\n    isOpen: false,\n    theme: 'light'\n  });\n\n  // Получаем данные пользователя из Telegram WebApp\n  const user: TelegramUser = window.Telegram?.WebApp?.initDataUnsafe?.user || {\n    id:11,\n    first_name: 'Гость',\n    photo_url: 'https://via.placeholder.com/100'\n  };\n\n\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [inputText, setInputText] = useState('');\n  const [replyContext, setReplyContext] = useState<ReplyContext | null>(null);\n  const [attachment, setAttachment] = useState<File | null>(null);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const [chatMenu, setChatMenu] = useState<ChatMenu>({\n    chatId: null,\n    isOpen: false,\n    position: null\n  });\n\n\n  //____________MODELS_____________________________________________________________\n  // Это три модели которые есть в backend\n  const [models, setModel] = useState<Category[]>([\n    { id: 'llama2', name: 'Llama 2' },\n    { id: 'deepseek-r1', name: 'DeepSeek' },\n    { id: 'mistral', name: 'Mistral' },\n  ]);\n  const [activeModel, setActiveModel] = useState<string>('llama2');\n  //_____________________________________________________________________________________________\n\n//_____________CHATS__________________________________________________________________________\n  // const [chats, setChats] = useState<Chat[]>([\n  //   { id: '1', title: 'Чат 1', lastMessage: 'Привет! Я твой помощник', model: 'llama2' },\n  //   { id: '2', title: 'Чат 2', lastMessage: 'Чем можем помочь?', model: 'deepseek-r1' },\n  //   { id: '3', title: 'Чат 3', lastMessage: 'Частые вопросы', model: 'mistral' },\n  // ]);\n  const {chats, setChats, activeChat, setActiveChat, createAuto, delChat} = useChats(user.id)\n  const [isCreatingChat, setIsCreatingChat] = useState(false);\n  const [newChatTitle, setNewChatTitle] = useState('');\n\n  // Переключение чата\n  const handleChatChange = (chatId: string) => {\n    // Удаляем предыдущий чат, если он пустой\n    setChats(prev => {\n      const prevChat = prev.find(c => c.id === activeChat);\n      if (prevChat?.isEmpty) {\n        return prev.filter(c => c.id !== activeChat);\n      }\n      return prev;\n    });\n\n    setActiveChat(chatId);\n    setIsMenuOpen(false);\n\n    setMessages([{\n      id: '1',\n      text: `Добро пожаловать в чат \"${chats.find(c => c.id === chatId)?.title}\"!`,\n      sender: 'bot',\n      timestamp: new Date(),\n    }]);\n\n    // Сбрасываем непрочитанные\n    setChats(prev => prev.map(chat =>\n      chat.id === chatId\n        ? { ...chat, unreadCount: 0 }\n        : chat\n    ));\n\n  };\n\n  // Фокус на поле ввода при создании чата\n  useEffect(() => {\n    if (isCreatingChat && newChatInputRef.current) {\n      newChatInputRef.current.focus();\n    }\n  }, [isCreatingChat]);\n\n  // Создание нового чата\n  const handleCreateChat = (modelId: string) => {\n    const newChat: Chat = {\n      id: Date.now().toString(),\n      title: `Чат ${chats.filter(c => c.model === modelId).length + 1}`,\n      lastMessage: 'Новый чат создан',\n      model: modelId,\n      isEmpty: true, // Теперь это допустимо\n    };\n\n    setChats(prev => [...prev, newChat]);\n    handleChatChange(newChat.id);\n  };\n\n  // Получение чатов по моделям\n  const getChatsByModel = (modelId: string) => {\n    return chats.filter(chat => chat.model === modelId);\n  };\n\n  // Переименование чата, бэк не поддерживает((\n  const handleRenameChat = (newName: string) => {\n    setChats(prev => prev.map(chat =>\n      chat.id === chatMenu.chatId ? { ...chat, title: newName } : chat\n    ));\n    setChatMenu({ chatId: null, isOpen: false, position: null });\n  };\n\n  // Удаление чата\n  const handleDeleteChat = () => {\n    if (!chatMenu.chatId) return;\n\n    setChats(prev => prev.filter(chat => chat.id !== chatMenu.chatId));\n    if (activeChat === chatMenu.chatId) {\n      const remainingChats = chats.filter(chat => chat.id !== chatMenu.chatId);\n      setActiveChat(remainingChats[0]?.id || '');\n    }\n    setChatMenu({ chatId: null, isOpen: false, position: null });\n    delChat()\n  };\n//_____________________________________________________________________________\n\n  \n\n\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const newChatInputRef = useRef<HTMLInputElement>(null);\n\n  // Темы\n  useEffect(() => {\n    // Простая проверка темы без использования Telegram API\n    const isDarkMode = window.matchMedia?.('(prefers-color-scheme: dark)').matches;\n    const theme = isDarkMode ? 'dark' : 'light';\n\n    // Применяем тему\n    document.body.classList.toggle('dark-theme', theme === 'dark');\n  }, []);\n\n  // Упрощенная функция смены темы\n  const toggleTheme = () => {\n    const newTheme = document.body.classList.contains('dark-theme') ? 'light' : 'dark';\n    document.body.classList.toggle('dark-theme', newTheme === 'dark');\n  };\n\n  // Инициализация с приветственным сообщением\n  useEffect(() => {\n    const welcomeMessage: Message = {\n      id: '1',\n      text: `Привет! Это чат \"${chats.find(c => c.id === activeChat)?.title}\". Чем могу помочь?`,\n      sender: 'bot',\n      timestamp: new Date(),\n    };\n    setMessages([welcomeMessage]);\n  }, [activeChat]);\n\n  // Автопрокрутка к новым сообщениям\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  \n\n  // Обработчик отправки сообщения\n  const handleSendMessage = async () => {\n    if (!inputText.trim() && !attachment) return;\n    const currentChat = chats.find(chat => chat.id === activeChat);\n\n    if (currentChat?.isEmpty || currentChat===undefined) {\n      //Создание чата с авто названием и делание его активным\n      const res: string = await createAuto(inputText, {telegram_id:user.id, model:activeModel, title:\"ЧБД\"})\n      handleChatChange(res)\n    }\n    \n    \n    const userMessage: Message = {\n      id: Date.now().toString(),\n      text: inputText,\n      sender: 'user',\n      timestamp: new Date(),\n      replyTo: replyContext?.messageId,\n    };\n\n    if (attachment) {\n      const attachmentType = attachment.type.startsWith('image/') ? 'image' : 'document';\n      userMessage.attachment = {\n        type: attachmentType,\n        url: URL.createObjectURL(attachment),\n        name: attachment.name,\n      };\n    }\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    setAttachment(null);\n    setReplyContext(null);\n\n   \n   \n\n    // Обновляем последнее сообщение в списке чатов\n    setChats(prev => prev.map(chat =>\n      chat.id === activeChat\n        ? { ...chat, lastMessage: inputText || 'Вложение', unreadCount: 0 }\n        : chat\n    ));\n\n    // Имитация ответа бота\n    setTimeout(() => {\n      const botResponse: Message = {\n        id: (Date.now() + 1).toString(),\n        text: generateBotResponse(inputText, replyContext),\n        sender: 'bot',\n        timestamp: new Date(),\n        replyTo: userMessage.id,\n      };\n      setMessages(prev => [...prev, botResponse]);\n    }, 1000);\n  };\n\n  // Генерация ответа бота\n  const generateBotResponse = (userText: string, context: ReplyContext | null): string => {\n    const responses = [\n      \"Я понял ваш запрос. Давайте обсудим это подробнее.\",\n      \"Интересный вопрос! Давайте разберемся вместе.\",\n      \"Спасибо за ваше сообщение. Я уже работаю над этим.\",\n      \"Хорошо, я записал эту информацию. Что еще вас интересует?\",\n      \"Отличное замечание! Давайте продолжим наш разговор.\"\n    ];\n\n    if (context) {\n      return `Отвечая на ваше сообщение \"${context.messageText}\": ${responses[Math.floor(Math.random() * responses.length)]}`;\n    }\n\n    return responses[Math.floor(Math.random() * responses.length)];\n  };\n\n  // Обработчик вложения файла\n  const handleAttachment = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) {\n      setAttachment(e.target.files[0]);\n    }\n  };\n\n  // Обработчик нажатия клавиш\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  \n  const handleOpenMenu = (chatId: string, e: React.MouseEvent) => {\n    e.stopPropagation();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setChatMenu({\n      chatId,\n      isOpen: true,\n      position: { top: rect.bottom + 5, left: rect.left - 100 }\n    });\n  };\n\n\n\n  return (\n    <div className=\"chat-app\">\n      {/* Заголовок чата - убираем кнопку создания */}\n      <div className=\"chat-header\">\n        <button className=\"menu-button\" onClick={() => setIsMenuOpen(!isMenuOpen)}>\n          ☰\n        </button>\n        <h2>{chats.find(c => c.id === activeChat)?.title || 'Выберите чат'}</h2>\n        {activeChat && (\n          <button\n            className=\"create-chat-button\"\n            onClick={() => {\n              const currentModel = chats.find(c => c.id === activeChat)?.model || activeModel;\n              handleCreateChat(currentModel);\n            }}\n          >\n            ＋\n          </button>\n        )}\n      </div>\n\n      {/* Боковое меню */}\n      <div className={`side-menu ${isMenuOpen ? 'open' : ''}`}>\n        <button\n          className=\"settings-button\"\n          onClick={() => setSettings(prev => ({ ...prev, isOpen: true }))}\n        >\n          ⚙️\n        </button>\n        {settings.isOpen && (\n          <div className=\"settings-modal\">\n            <div className=\"settings-content\">\n              <button\n                className=\"close-settings\"\n                onClick={() => setSettings(prev => ({ ...prev, isOpen: false }))}\n              >\n                ×\n              </button>\n\n              <div className=\"user-profile\">\n                <img\n                  src={user.photo_url || 'https://via.placeholder.com/100'}\n                  alt=\"Аватар\"\n                  className=\"user-avatar\"\n                  onError={(e) => {\n                    (e.target as HTMLImageElement).src = 'https://via.placeholder.com/100';\n                  }}\n                />\n                <h3>\n                  {[user.first_name, user.last_name]\n                    .filter(Boolean)\n                    .join(' ') || 'Пользователь'}\n                </h3>\n                {user.username && <p>@{user.username}</p>}\n                {user.language_code && <p>Язык: {user.language_code.toUpperCase()}</p>}\n              </div>\n\n              <div className=\"theme-switcher\">\n                <button\n                  onClick={() => {\n                    const newTheme = settings.theme === 'light' ? 'dark' : 'light';\n                    setSettings(prev => ({ ...prev, theme: newTheme }));\n                    // Здесь можно добавить логику смены темы в Telegram WebApp\n                  }}\n                >\n                  {settings.theme === 'light' ? '🌙 Тёмная тема' : '☀️ Светлая тема'}\n                </button>\n              </div>\n            </div>\n            <div\n              className=\"settings-overlay\"\n              onClick={() => setSettings(prev => ({ ...prev, isOpen: false }))}\n            />\n          </div>\n        )}\n\n        <div className=\"menu-header\">\n          <h3>Мои чаты</h3>\n          <button className=\"close-menu\" onClick={() => setIsMenuOpen(false)}>\n            ×\n          </button>\n        </div>\n\n        <div className=\"categories-tabs\">\n          {models.map(model => (\n            <button\n              key={model.id}\n              className={`category-tab ${activeModel === model.id ? 'active' : ''}`}\n              onClick={() => setActiveModel(model.id)}\n            >\n              {model.name}\n            </button>\n          ))}\n        </div>\n\n        <div className=\"chat-list\">\n          {/* Добавляем кнопку создания чата в категорию */}\n          <button\n            className=\"create-chat-in-category small\"\n            onClick={() => handleCreateChat(activeModel)}\n          >\n            ＋ Создать чат\n          </button>\n\n          {getChatsByModel(activeModel).length > 0 ? (\n            getChatsByModel(activeModel).map(chat => (\n              <div\n                key={chat.id}\n                className={`chat-item ${activeChat === chat.id ? 'active' : ''}`}\n                onClick={() => handleChatChange(chat.id)}\n              >\n                <div className=\"chat-info\">\n                  <div className=\"chat-title\">{chat.title}</div>\n                  <div className=\"chat-preview\">\n                    {chat.lastMessage?.substring(0, 30)}{chat.lastMessage && chat.lastMessage.length > 30 ? '...' : ''}\n                  </div>\n                </div>\n\n                <div className=\"chat-actions\">\n                  <button className=\"chat-menu-button\" onClick={(e) => handleOpenMenu(chat.id, e)}>\n                    ⋮\n                  </button>\n                  {chatMenu.isOpen && (\n                    <>\n                      <div\n                        className=\"menu-overlay\"\n                        onClick={() => setChatMenu({ chatId: null, isOpen: false, position: null })}\n                      />\n                      <div\n                        className=\"chat-context-menu\"\n                        style={{\n                          top: `${chatMenu.position?.top}px`,\n                          left: `${chatMenu.position?.left}px`\n                        }}\n                      >\n                        <button\n                          className=\"menu-item\"\n                          onClick={() => {\n                            const newName = prompt('Введите новое название:',\n                              chats.find(c => c.id === chatMenu.chatId)?.title);\n                            if (newName) handleRenameChat(newName);\n                          }}\n                        >\n                          Переименовать\n                        </button>\n                        <button\n                          className=\"menu-item delete\"\n                          onClick={handleDeleteChat}\n                        >\n                          Удалить чат\n                        </button>\n                      </div>\n                    </>\n                  )}\n                </div>\n              </div>\n            ))\n          ) : (\n            <div className=\"no-chats\">\n              Нет чатов в этой категории\n            </div>\n          )}\n        </div>\n      </div>\n\n\n      {/* Затемнение фона при открытом меню */}\n      {isMenuOpen && (\n        <div className=\"menu-overlay\" onClick={() => setIsMenuOpen(false)} />\n      )}\n\n      {/* Область сообщений */}\n      <div className=\"messages-container\">\n        {activeChat ? (\n          messages.map((message) => (\n            <div\n              key={message.id}\n              className={`message ${message.sender}`}\n              onClick={() => setReplyContext({\n                messageId: message.id,\n                messageText: message.text,\n              })}\n            >\n              {message.replyTo && (\n                <div className=\"reply-context\">\n                  {messages.find(m => m.id === message.replyTo)?.text}\n                </div>\n              )}\n\n              {message.attachment && (\n                <div className=\"attachment\">\n                  {message.attachment.type === 'image' ? (\n                    <img src={message.attachment.url} alt=\"Прикрепленное изображение\" />\n                  ) : (\n                    <a href={message.attachment.url} download>\n                      📄 {message.attachment.name || 'Документ'}\n                    </a>\n                  )}\n                </div>\n              )}\n\n              <div className=\"message-text\">{message.text}</div>\n              <div className=\"message-time\">\n                {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n              </div>\n            </div>\n          ))\n        ) : (\n          <div className=\"no-chat-selected\">\n            <p>Выберите чат из списка или создайте новый</p>\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* Панель ввода (только если выбран чат) */}\n      {activeChat && (\n        <div className=\"input-area\">\n          {replyContext && (\n            <div className=\"reply-preview\">\n              Ответ на: {replyContext.messageText}\n              <button onClick={() => setReplyContext(null)}>×</button>\n            </div>\n          )}\n\n          <div className=\"input-container\">\n            <button\n              className=\"attach-button\"\n              onClick={() => fileInputRef.current?.click()}\n            >\n              📎\n            </button>\n\n            <input\n              type=\"file\"\n              ref={fileInputRef}\n              onChange={handleAttachment}\n              style={{ display: 'none' }}\n              accept=\"image/*,.pdf,.doc,.docx\"\n            />\n\n            <textarea\n              value={inputText}\n              onChange={(e) => setInputText(e.target.value)}\n              onKeyDown={handleKeyDown}\n              placeholder=\"Напишите сообщение...\"\n              rows={1}\n            />\n\n            <button\n              className=\"send-button\"\n              onClick={handleSendMessage}\n              disabled={!inputText.trim() && !attachment}\n            >\n              {attachment ? '📤' : '➤'}\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}