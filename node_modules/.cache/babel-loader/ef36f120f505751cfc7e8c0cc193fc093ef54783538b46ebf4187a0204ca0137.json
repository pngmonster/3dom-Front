{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/hooks/useMessages.ts\nimport { useState, useEffect, useCallback } from 'react';\nimport { getMessages, createMessage, getMessage } from '../api/messages';\nimport { transformMessageOut, transformMessages } from '../utils/transform';\nexport function useMessages(chatId) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchMessages();\n  }, [chatId]);\n  const fetchMessages = async () => {\n    try {\n      if (!chatId) {\n        return;\n      }\n      const res = await getMessages(chatId);\n      const trans = transformMessages(res);\n      setMessages(trans);\n    } catch (err) {\n      console.error('Ошибка при получении чатов:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const send = useCallback(async msg => {\n    const newID = await createMessage(msg);\n    const newMsg = await getMessage(newID);\n    setMessages(prev => [...prev, transformMessageOut(newMsg)]);\n    return transformMessageOut(newMsg);\n  }, []);\n  return {\n    messages,\n    setMessages,\n    loading,\n    error,\n    send\n  };\n}\n_s(useMessages, \"0b6MivOnjgvvxaUfmHvrwD4Fs9k=\");\nexport function useStreamMessage() {\n  _s2();\n  const [chunks, setChunks] = useState([]);\n  const [error, setError] = useState(null);\n  const start = useCallback(id => {\n    setChunks([]); // обнуляем при новом запуске\n    const evtSource = new EventSource(`https://giicoo.ru/api/message-service/stream?id=${encodeURIComponent(id)}`);\n    evtSource.onmessage = e => {\n      setChunks(prev => [...prev, e.data]);\n    };\n    evtSource.onerror = e => {\n      setError('Stream error');\n      evtSource.close();\n    };\n    return () => {\n      evtSource.close();\n    };\n  }, []);\n  return {\n    chunks,\n    error,\n    start\n  };\n}\n_s2(useStreamMessage, \"ZZEYizF44Dicu1ckwbf8AGghMdY=\");","map":{"version":3,"names":["useState","useEffect","useCallback","getMessages","createMessage","getMessage","transformMessageOut","transformMessages","useMessages","chatId","_s","messages","setMessages","loading","setLoading","error","setError","fetchMessages","res","trans","err","console","send","msg","newID","newMsg","prev","useStreamMessage","_s2","chunks","setChunks","start","id","evtSource","EventSource","encodeURIComponent","onmessage","e","data","onerror","close"],"sources":["/home/giicoo/projects/3DOM FRONT/3dom-Front/src/hooks/useMessages.ts"],"sourcesContent":["// src/hooks/useMessages.ts\nimport { useState, useEffect, useCallback } from 'react';\nimport {\n  getMessages,\n  createMessage,\n  getMessage,\n} from '../api/messages';\nimport { MessageIn, MessageOut } from '../api/types';\nimport { Message } from '../types';\nimport { transformMessageOut, transformMessages } from '../utils/transform';\n\nexport function useMessages(chatId: string | null) {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  \n\n  useEffect(() => {\n    fetchMessages()\n  }, [chatId]);\n\n  const fetchMessages = async () => {\n      try {\n        if (!chatId) { return; }\n\n        const res = await getMessages(chatId);\n        const trans = transformMessages(res)\n        setMessages(trans);\n\n      } catch (err) {\n        console.error('Ошибка при получении чатов:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n  const send = useCallback(\n    async (msg: MessageIn) => {\n      const newID = await createMessage(msg);\n      const newMsg = await getMessage(newID)\n      setMessages(prev => [...prev, transformMessageOut(newMsg)]);\n      return transformMessageOut(newMsg);\n    },\n    []\n  );\n\n  return { messages, setMessages, loading, error, send};\n}\n\nexport function useStreamMessage() {\n  const [chunks, setChunks] = useState<string[]>([]);\n  const [error, setError] = useState<string | null>(null);\n\n  const start = useCallback((id: string) => {\n    setChunks([]); // обнуляем при новом запуске\n    const evtSource = new EventSource(`https://giicoo.ru/api/message-service/stream?id=${encodeURIComponent(id)}`);\n\n    evtSource.onmessage = e => {\n      setChunks(prev => [...prev, e.data]);\n    };\n\n    evtSource.onerror = e => {\n      setError('Stream error');\n      evtSource.close();\n    };\n\n    return () => {\n      evtSource.close();\n    };\n  }, []);\n\n  return { chunks, error, start };\n}"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SACEC,WAAW,EACXC,aAAa,EACbC,UAAU,QACL,iBAAiB;AAGxB,SAASC,mBAAmB,EAAEC,iBAAiB,QAAQ,oBAAoB;AAE3E,OAAO,SAASC,WAAWA,CAACC,MAAqB,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAU,KAAK,CAAC;EACtD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAgB,IAAI,CAAC;EAGvDC,SAAS,CAAC,MAAM;IACdgB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZ,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,IAAI,CAACR,MAAM,EAAE;QAAE;MAAQ;MAEvB,MAAMS,GAAG,GAAG,MAAMf,WAAW,CAACM,MAAM,CAAC;MACrC,MAAMU,KAAK,GAAGZ,iBAAiB,CAACW,GAAG,CAAC;MACpCN,WAAW,CAACO,KAAK,CAAC;IAEpB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACN,KAAK,CAAC,6BAA6B,EAAEK,GAAG,CAAC;IACnD,CAAC,SAAS;MACRN,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEH,MAAMQ,IAAI,GAAGpB,WAAW,CACtB,MAAOqB,GAAc,IAAK;IACxB,MAAMC,KAAK,GAAG,MAAMpB,aAAa,CAACmB,GAAG,CAAC;IACtC,MAAME,MAAM,GAAG,MAAMpB,UAAU,CAACmB,KAAK,CAAC;IACtCZ,WAAW,CAACc,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEpB,mBAAmB,CAACmB,MAAM,CAAC,CAAC,CAAC;IAC3D,OAAOnB,mBAAmB,CAACmB,MAAM,CAAC;EACpC,CAAC,EACD,EACF,CAAC;EAED,OAAO;IAAEd,QAAQ;IAAEC,WAAW;IAAEC,OAAO;IAAEE,KAAK;IAAEO;EAAI,CAAC;AACvD;AAACZ,EAAA,CApCeF,WAAW;AAsC3B,OAAO,SAASmB,gBAAgBA,CAAA,EAAG;EAAAC,GAAA;EACjC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG9B,QAAQ,CAAW,EAAE,CAAC;EAClD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAgB,IAAI,CAAC;EAEvD,MAAM+B,KAAK,GAAG7B,WAAW,CAAE8B,EAAU,IAAK;IACxCF,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;IACf,MAAMG,SAAS,GAAG,IAAIC,WAAW,CAAC,mDAAmDC,kBAAkB,CAACH,EAAE,CAAC,EAAE,CAAC;IAE9GC,SAAS,CAACG,SAAS,GAAGC,CAAC,IAAI;MACzBP,SAAS,CAACJ,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEW,CAAC,CAACC,IAAI,CAAC,CAAC;IACtC,CAAC;IAEDL,SAAS,CAACM,OAAO,GAAGF,CAAC,IAAI;MACvBrB,QAAQ,CAAC,cAAc,CAAC;MACxBiB,SAAS,CAACO,KAAK,CAAC,CAAC;IACnB,CAAC;IAED,OAAO,MAAM;MACXP,SAAS,CAACO,KAAK,CAAC,CAAC;IACnB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEX,MAAM;IAAEd,KAAK;IAAEgB;EAAM,CAAC;AACjC;AAACH,GAAA,CAvBeD,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}