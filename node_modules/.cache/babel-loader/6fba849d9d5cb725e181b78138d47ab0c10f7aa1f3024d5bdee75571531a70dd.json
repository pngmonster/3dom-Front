{"ast":null,"code":"import{useState}from'react';import{uploadFile}from'../api/file';export function useUploadFile(){const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const upload=async(chatId,file)=>{setLoading(true);setError(null);try{const res=await uploadFile(chatId,file);return res;}catch(err){setError(err);return{ids:[]};}finally{setLoading(false);}};return{upload,loading,error};}","map":{"version":3,"names":["useState","uploadFile","useUploadFile","loading","setLoading","error","setError","upload","chatId","file","res","err","ids"],"sources":["/home/giicoo/projects/3DOM FRONT/3dom-Front/src/hooks/useFile.ts"],"sourcesContent":["import { useState } from 'react';\nimport { uploadFile } from '../api/file';\n\nexport function useUploadFile() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  const upload = async (chatId: string, file: File) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await uploadFile(chatId, file);\n      return res;\n    } catch (err) {\n      setError(err as Error);\n      return {ids:[]}\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return { upload, loading, error };\n}"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,OAASC,UAAU,KAAQ,aAAa,CAExC,MAAO,SAAS,CAAAC,aAAaA,CAAA,CAAG,CAC9B,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGJ,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACK,KAAK,CAAEC,QAAQ,CAAC,CAAGN,QAAQ,CAAe,IAAI,CAAC,CAEtD,KAAM,CAAAO,MAAM,CAAG,KAAAA,CAAOC,MAAc,CAAEC,IAAU,GAAK,CACnDL,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CACd,GAAI,CACF,KAAM,CAAAI,GAAG,CAAG,KAAM,CAAAT,UAAU,CAACO,MAAM,CAAEC,IAAI,CAAC,CAC1C,MAAO,CAAAC,GAAG,CACZ,CAAE,MAAOC,GAAG,CAAE,CACZL,QAAQ,CAACK,GAAY,CAAC,CACtB,MAAO,CAACC,GAAG,CAAC,EAAE,CAAC,CACjB,CAAC,OAAS,CACRR,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,MAAO,CAAEG,MAAM,CAAEJ,OAAO,CAAEE,KAAM,CAAC,CACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}