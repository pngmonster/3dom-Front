{"ast":null,"code":"var _jsxFileName = \"/home/giicoo/projects/3DOM FRONT/3dom-Front/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './ChatApp.css';\nimport { useChats } from './hooks/useChats';\nimport { useMessages, useStreamMessage } from './hooks/useMessages';\nimport { MessageThread } from './components/message';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useUploadFile } from './hooks/useFile';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatApp = () => {\n  _s();\n  var _window$Telegram, _window$Telegram$WebA, _window$Telegram$WebA2, _chats$find;\n  const [settings, setSettings] = useState({\n    isOpen: false,\n    theme: 'light'\n  });\n\n  // Получаем данные пользователя из Telegram WebApp\n  const user = ((_window$Telegram = window.Telegram) === null || _window$Telegram === void 0 ? void 0 : (_window$Telegram$WebA = _window$Telegram.WebApp) === null || _window$Telegram$WebA === void 0 ? void 0 : (_window$Telegram$WebA2 = _window$Telegram$WebA.initDataUnsafe) === null || _window$Telegram$WebA2 === void 0 ? void 0 : _window$Telegram$WebA2.user) || {\n    id: 11,\n    first_name: 'Гость',\n    photo_url: 'https://via.placeholder.com/100'\n  };\n  const [inputText, setInputText] = useState('');\n  const [replyContext, setReplyContext] = useState(null);\n  const [attachment, setAttachment] = useState(null);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [chatMenu, setChatMenu] = useState({\n    chatId: null,\n    isOpen: false,\n    position: null\n  });\n\n  //____________MODELS_____________________________________________________________\n  // Это три модели которые есть в backend\n  const [models, setModel] = useState([{\n    id: 'llama2',\n    name: 'Llama 2'\n  }, {\n    id: 'deepseek-r1:8b',\n    name: 'DeepSeek'\n  }, {\n    id: 'mistral',\n    name: 'Mistral'\n  }]);\n  const [activeModel, setActiveModel] = useState('llama2');\n  //_____________________________________________________________________________________________\n\n  //_____________CHATS__________________________________________________________________________\n  const {\n    chats,\n    setChats,\n    createAuto,\n    delChat\n  } = useChats(user.id);\n  const [activeChat, setActiveChat] = useState('');\n  const [isCreatingChat, setIsCreatingChat] = useState(false);\n\n  // Переключение чата\n  const handleChatChange = async chatId => {\n    // Удаляем предыдущий чат, если он пустой\n    setChats(prev => {\n      const prevChat = prev.find(c => c.id === activeChat);\n      if (prevChat !== null && prevChat !== void 0 && prevChat.isEmpty) {\n        return prev.filter(c => c.id !== activeChat);\n      }\n      return prev;\n    });\n    setActiveChat(chatId);\n    setIsMenuOpen(false);\n\n    // Сбрасываем непрочитанные\n    setChats(prev => prev.map(chat => chat.id === chatId ? {\n      ...chat,\n      unreadCount: 0\n    } : chat));\n  };\n\n  // Фокус на поле ввода при создании чата\n  useEffect(() => {\n    if (isCreatingChat && newChatInputRef.current) {\n      newChatInputRef.current.focus();\n    }\n  }, [isCreatingChat]);\n\n  // Создание нового чата\n  const handleCreateChat = async modelId => {\n    // Пустой чат заглушка\n    const newChat = {\n      id: \"0\",\n      title: `Чат ${chats.filter(c => c.model === modelId).length + 1}`,\n      lastMessage: 'Новый чат создан',\n      model: modelId,\n      isEmpty: true // Теперь это допустимо\n    };\n    setChats(prev => [...prev, newChat]);\n\n    // Чтобы сообщения в новом чате не ссылались на сообщения из других чатов\n    setParent(null);\n    await handleChatChange(newChat.id);\n  };\n\n  // Получение чатов по моделям\n  const getChatsByModel = modelId => {\n    return chats.filter(chat => chat.model === modelId);\n  };\n\n  // Переименование чата, бэк не поддерживает((\n  const handleRenameChat = newName => {\n    setChats(prev => prev.map(chat => chat.id === chatMenu.chatId ? {\n      ...chat,\n      title: newName\n    } : chat));\n    setChatMenu({\n      chatId: null,\n      isOpen: false,\n      position: null\n    });\n  };\n\n  // Удаление чата\n  const handleDeleteChat = () => {\n    if (!chatMenu.chatId) return;\n    setChats(prev => prev.filter(chat => chat.id !== chatMenu.chatId));\n    if (activeChat === chatMenu.chatId) {\n      var _remainingChats$;\n      const remainingChats = chats.filter(chat => chat.id !== chatMenu.chatId);\n      setActiveChat(((_remainingChats$ = remainingChats[0]) === null || _remainingChats$ === void 0 ? void 0 : _remainingChats$.id) || '');\n    }\n    delChat(chatMenu.chatId);\n    setChatMenu({\n      chatId: null,\n      isOpen: false,\n      position: null\n    });\n  };\n  //_____________________________________________________________________________\n\n  //__________________MESSAGES_________________________\n  const {\n    messages,\n    setMessages,\n    send\n  } = useMessages(activeChat);\n  const [parentId, setParent] = useState(null);\n  const {\n    chunks,\n    error,\n    start\n  } = useStreamMessage(activeChat);\n  const [rootID, setRootID] = useState(null);\n  const {\n    upload\n  } = useUploadFile();\n\n  // Используется для стриминга сообщений от LLM\n  useEffect(() => {\n    if (chunks.length > 0) {\n      setMessages(prevMessages => {\n        if (prevMessages.length === 0) return prevMessages;\n        const updatedMessages = [...prevMessages];\n        const lastIndex = updatedMessages.length - 1;\n        updatedMessages[lastIndex] = {\n          ...updatedMessages[lastIndex],\n          content: chunks.join(\"\")\n        };\n        return updatedMessages;\n      });\n    }\n  }, [chunks, parentId]);\n\n  // Автопрокрутка к новым сообщениям\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = async () => {\n    if (!inputText.trim() && !attachment) return;\n    const currentChat = chats.find(chat => chat.id === activeChat);\n    let requestMessage;\n    let newMsg;\n\n    // Если текущий чат пустой, то вначале создается с автоматическим название чат\n    // Используя его newChatId создаю новое сообщение юзера и стримлю ответ на это сообщение\n    // Затем когда стриминг закончился итоговый ответ LLM сохраняю и только тогда меня текущий чат на сгенерированный\n    if (!currentChat || currentChat.isEmpty) {\n      const newChatId = await createAuto(inputText, {\n        telegram_id: user.id,\n        model: activeModel,\n        title: 'ЧБД'\n      });\n      requestMessage = {\n        chat_id: newChatId,\n        parent_id: null,\n        res_ids: res_ids.ids,\n        role: 'user',\n        content: inputText\n      };\n      newMsg = await send(requestMessage);\n      setParent(newMsg.id);\n      setInputText('');\n      setAttachment(null);\n      setReplyContext(null);\n      const tempId = uuidv4();\n      const newResponse = {\n        id: tempId,\n        parent_id: newMsg.id,\n        res_ids: newMsg.res_ids,\n        role: \"assistant\",\n        content: \"\"\n      };\n      setMessages(prev => [...prev, newResponse]);\n      const fullResponse = await start(newMsg.id);\n      const requestMessageAs = {\n        chat_id: requestMessage.chat_id,\n        parent_id: newMsg.id,\n        res_ids: newMsg.res_ids,\n        role: \"assistant\",\n        content: fullResponse\n      };\n      const responseAs = await send(requestMessageAs);\n      setRootID(responseAs.id);\n      // Заменить временное сообщение (id === \"0\") на настоящее\n      setMessages(prev => prev.map(msg => msg.id === tempId ? responseAs // ✅ подставляем настоящее сообщение\n      : msg));\n      setRes({\n        ids: []\n      });\n      await handleChatChange(newChatId);\n      return;\n    } else {\n      requestMessage = {\n        chat_id: activeChat,\n        parent_id: replyContext ? replyContext.messageId : rootID,\n        res_ids: res_ids.ids,\n        role: 'user',\n        content: inputText\n      };\n      newMsg = await send(requestMessage);\n      setParent(newMsg.id);\n      setRes({\n        ids: []\n      });\n    }\n    setInputText('');\n    setAttachment(null);\n    setReplyContext(null);\n    const tempId = uuidv4();\n    const newResponse = {\n      id: tempId,\n      parent_id: newMsg.id,\n      res_ids: newMsg.res_ids,\n      role: \"assistant\",\n      content: \"\"\n    };\n    setMessages(prev => [...prev, newResponse]);\n    const fullResponse = await start(newMsg.id);\n    const requestMessageAs = {\n      chat_id: requestMessage.chat_id,\n      parent_id: newMsg.id,\n      res_ids: newMsg.res_ids,\n      role: \"assistant\",\n      content: fullResponse\n    };\n    const responseAs = await send(requestMessageAs);\n    setRootID(responseAs.id);\n    // Заменить временное сообщение (id === \"0\") на настоящее\n    setMessages(prev => prev.map(msg => msg.id === tempId ? responseAs // ✅ подставляем настоящее сообщение\n    : msg));\n\n    // Обновляем последнее сообщение в списке чатов\n    setChats(prev => prev.map(chat => chat.id === activeChat ? {\n      ...chat,\n      lastMessage: inputText || 'Вложение',\n      unreadCount: 0\n    } : chat));\n  };\n  const [res_ids, setRes] = useState({\n    ids: []\n  });\n  const [childIndexes, setChildIndexes] = useState({});\n\n  //___________________________________________________________\n\n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const newChatInputRef = useRef(null);\n\n  // Темы\n  useEffect(() => {\n    var _window$matchMedia, _window;\n    // Простая проверка темы без использования Telegram API\n    const isDarkMode = (_window$matchMedia = (_window = window).matchMedia) === null || _window$matchMedia === void 0 ? void 0 : _window$matchMedia.call(_window, '(prefers-color-scheme: dark)').matches;\n    const theme = isDarkMode ? 'dark' : 'light';\n\n    // Применяем тему\n    document.body.classList.toggle('dark-theme', theme === 'dark');\n  }, []);\n\n  // Упрощенная функция смены темы\n  const toggleTheme = () => {\n    const newTheme = document.body.classList.contains('dark-theme') ? 'light' : 'dark';\n    document.body.classList.toggle('dark-theme', newTheme === 'dark');\n  };\n\n  // Обработчик вложения файла\n  const handleAttachment = async e => {\n    if (e.target.files && e.target.files[0]) {\n      //setAttachment(e.target.files[0]);\n      const res = await upload(activeChat, e.target.files[0]);\n      // получаем id чанков файла и сохраняем их в следующее сообщение\n      setRes(res);\n      await send({\n        chat_id: activeChat,\n        role: \"user\",\n        content: e.target.files[0].name\n      });\n    }\n  };\n\n  // Обработчик нажатия клавиш\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const handleOpenMenu = (chatId, e) => {\n    e.stopPropagation();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setChatMenu({\n      chatId,\n      isOpen: true,\n      position: {\n        top: rect.bottom + 5,\n        left: rect.left - 100\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"menu-button\",\n        onClick: () => setIsMenuOpen(!isMenuOpen),\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: ((_chats$find = chats.find(c => c.id === activeChat)) === null || _chats$find === void 0 ? void 0 : _chats$find.title) || 'Выберите чат'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), activeChat && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-chat-button\",\n        onClick: () => {\n          var _chats$find2;\n          const currentModel = ((_chats$find2 = chats.find(c => c.id === activeChat)) === null || _chats$find2 === void 0 ? void 0 : _chats$find2.model) || activeModel;\n          handleCreateChat(currentModel);\n        },\n        children: \"\\uFF0B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `side-menu ${isMenuOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"settings-button\",\n        onClick: () => setSettings(prev => ({\n          ...prev,\n          isOpen: true\n        })),\n        children: \"\\u2699\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), settings.isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-settings\",\n            onClick: () => setSettings(prev => ({\n              ...prev,\n              isOpen: false\n            })),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-profile\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.photo_url || 'https://via.placeholder.com/100',\n              alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\",\n              className: \"user-avatar\",\n              onError: e => {\n                e.target.src = 'https://via.placeholder.com/100';\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [user.first_name, user.last_name].filter(Boolean).join(' ') || 'Пользователь'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this), user.username && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"@\", user.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 35\n            }, this), user.language_code && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u042F\\u0437\\u044B\\u043A: \", user.language_code.toUpperCase()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"theme-switcher\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const newTheme = settings.theme === 'light' ? 'dark' : 'light';\n                setSettings(prev => ({\n                  ...prev,\n                  theme: newTheme\n                }));\n                // Здесь можно добавить логику смены темы в Telegram WebApp\n              },\n              children: settings.theme === 'light' ? '🌙 Тёмная тема' : '☀️ Светлая тема'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-overlay\",\n          onClick: () => setSettings(prev => ({\n            ...prev,\n            isOpen: false\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u041C\\u043E\\u0438 \\u0447\\u0430\\u0442\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-menu\",\n          onClick: () => setIsMenuOpen(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories-tabs\",\n        children: models.map(model => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `category-tab ${activeModel === model.id ? 'active' : ''}`,\n          onClick: () => setActiveModel(model.id),\n          children: model.name\n        }, model.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-chat-in-category small\",\n          onClick: () => handleCreateChat(activeModel),\n          children: \"\\uFF0B \\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0447\\u0430\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), getChatsByModel(activeModel).length > 0 ? [...getChatsByModel(activeModel)].reverse().map(chat => {\n          var _chat$lastMessage, _chatMenu$position, _chatMenu$position2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-item ${activeChat === chat.id ? 'active' : ''}`,\n            onClick: () => handleChatChange(chat.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-title\",\n                children: chat.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-preview\",\n                children: [(_chat$lastMessage = chat.lastMessage) === null || _chat$lastMessage === void 0 ? void 0 : _chat$lastMessage.substring(0, 30), chat.lastMessage && chat.lastMessage.length > 30 ? '...' : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chat-menu-button\",\n                onClick: e => handleOpenMenu(chat.id, e),\n                children: \"\\u22EE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 19\n              }, this), chatMenu.isOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"menu-overlay\",\n                  onClick: () => setChatMenu({\n                    chatId: null,\n                    isOpen: false,\n                    position: null\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"chat-context-menu\",\n                  style: {\n                    top: `${(_chatMenu$position = chatMenu.position) === null || _chatMenu$position === void 0 ? void 0 : _chatMenu$position.top}px`,\n                    left: `${(_chatMenu$position2 = chatMenu.position) === null || _chatMenu$position2 === void 0 ? void 0 : _chatMenu$position2.left}px`\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"menu-item\",\n                    onClick: () => {\n                      var _chats$find3;\n                      const newName = prompt('Введите новое название:', (_chats$find3 = chats.find(c => c.id === chatMenu.chatId)) === null || _chats$find3 === void 0 ? void 0 : _chats$find3.title);\n                      if (newName) handleRenameChat(newName);\n                    },\n                    children: \"\\u041F\\u0435\\u0440\\u0435\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u0442\\u044C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"menu-item delete\",\n                    onClick: handleDeleteChat,\n                    children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0447\\u0430\\u0442\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this)]\n          }, chat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-chats\",\n          children: \"\\u041D\\u0435\\u0442 \\u0447\\u0430\\u0442\\u043E\\u0432 \\u0432 \\u044D\\u0442\\u043E\\u0439 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), isMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-overlay\",\n      onClick: () => setIsMenuOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.filter(msg => msg.parent_id === null).map(root => /*#__PURE__*/_jsxDEV(MessageThread, {\n        message: root,\n        messages: messages,\n        childIndexes: childIndexes,\n        setChildIndexes: setChildIndexes,\n        onLastMessageIdChange: id => {\n          console.log('Current last message ID:', id);\n          setRootID(id);\n        },\n        setReplyContext: setReplyContext\n      }, root.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 7\n    }, this), activeChat && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [replyContext && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reply-preview\",\n        children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442 \\u043D\\u0430: \", replyContext.messageText, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setReplyContext(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"attach-button\",\n          onClick: () => {\n            var _fileInputRef$current;\n            return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n          },\n          children: \"\\uD83D\\uDCCE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInputRef,\n          onChange: handleAttachment,\n          style: {\n            display: 'none'\n          },\n          accept: \".pdf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          onKeyDown: handleKeyDown,\n          placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n          rows: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSendMessage,\n          disabled: !inputText.trim() && !attachment,\n          children: attachment ? '📤' : '➤'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatApp, \"rch4QQHqRXBUIVTqKa8kDBZJHBM=\", false, function () {\n  return [useChats, useMessages, useStreamMessage, useUploadFile];\n});\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useChats","useMessages","useStreamMessage","MessageThread","v4","uuidv4","useUploadFile","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatApp","_s","_window$Telegram","_window$Telegram$WebA","_window$Telegram$WebA2","_chats$find","settings","setSettings","isOpen","theme","user","window","Telegram","WebApp","initDataUnsafe","id","first_name","photo_url","inputText","setInputText","replyContext","setReplyContext","attachment","setAttachment","isMenuOpen","setIsMenuOpen","chatMenu","setChatMenu","chatId","position","models","setModel","name","activeModel","setActiveModel","chats","setChats","createAuto","delChat","activeChat","setActiveChat","isCreatingChat","setIsCreatingChat","handleChatChange","prev","prevChat","find","c","isEmpty","filter","map","chat","unreadCount","newChatInputRef","current","focus","handleCreateChat","modelId","newChat","title","model","length","lastMessage","setParent","getChatsByModel","handleRenameChat","newName","handleDeleteChat","_remainingChats$","remainingChats","messages","setMessages","send","parentId","chunks","error","start","rootID","setRootID","upload","prevMessages","updatedMessages","lastIndex","content","join","_messagesEndRef$curre","messagesEndRef","scrollIntoView","behavior","handleSendMessage","trim","currentChat","requestMessage","newMsg","newChatId","telegram_id","chat_id","parent_id","res_ids","ids","role","tempId","newResponse","fullResponse","requestMessageAs","responseAs","msg","setRes","messageId","childIndexes","setChildIndexes","fileInputRef","_window$matchMedia","_window","isDarkMode","matchMedia","call","matches","document","body","classList","toggle","toggleTheme","newTheme","contains","handleAttachment","e","target","files","res","handleKeyDown","key","shiftKey","preventDefault","handleOpenMenu","stopPropagation","rect","currentTarget","getBoundingClientRect","top","bottom","left","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_chats$find2","currentModel","src","alt","onError","last_name","Boolean","username","language_code","toUpperCase","reverse","_chat$lastMessage","_chatMenu$position","_chatMenu$position2","substring","style","_chats$find3","prompt","root","message","onLastMessageIdChange","console","log","messageText","_fileInputRef$current","click","type","ref","onChange","display","accept","value","onKeyDown","placeholder","rows","disabled","_c","$RefreshReg$"],"sources":["/home/giicoo/projects/3DOM FRONT/3dom-Front/src/App.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useContext } from 'react';\nimport './ChatApp.css';\nimport { Chat, ChatMenu, Message, Model, ReplyContext, Settings, TelegramUser } from './types';\nimport { useChats } from './hooks/useChats';\nimport { useMessages, useStreamMessage } from './hooks/useMessages';\nimport { MessageIn } from './api/types';\nimport { MessageThread } from './components/message'\nimport { v4 as uuidv4 } from 'uuid';\nimport { useUploadFile } from './hooks/useFile';\n\n\nconst ChatApp: React.FC = () => {\n  const [settings, setSettings] = useState<Settings>({\n    isOpen: false,\n    theme: 'light'\n  });\n\n  // Получаем данные пользователя из Telegram WebApp\n  const user: TelegramUser = window.Telegram?.WebApp?.initDataUnsafe?.user || {\n    id:11,\n    first_name: 'Гость',\n    photo_url: 'https://via.placeholder.com/100'\n  };\n\n\n  const [inputText, setInputText] = useState('');\n  const [replyContext, setReplyContext] = useState<ReplyContext | null>(null);\n  const [attachment, setAttachment] = useState<File | null>(null);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const [chatMenu, setChatMenu] = useState<ChatMenu>({\n    chatId: null,\n    isOpen: false,\n    position: null\n  });\n\n\n  //____________MODELS_____________________________________________________________\n  // Это три модели которые есть в backend\n  const [models, setModel] = useState<Model[]>([\n    { id: 'llama2', name: 'Llama 2' },\n    { id: 'deepseek-r1:8b', name: 'DeepSeek' },\n    { id: 'mistral', name: 'Mistral' },\n  ]);\n  const [activeModel, setActiveModel] = useState<string>('llama2');\n  //_____________________________________________________________________________________________\n\n//_____________CHATS__________________________________________________________________________\n  const {chats, setChats, createAuto, delChat} = useChats(user.id)\n  const [activeChat, setActiveChat] = useState<string>('');\n  const [isCreatingChat, setIsCreatingChat] = useState(false);\n\n  // Переключение чата\n  const handleChatChange = async (chatId: string) => {\n    // Удаляем предыдущий чат, если он пустой\n    setChats(prev => {\n      const prevChat = prev.find(c => c.id === activeChat);\n      if (prevChat?.isEmpty) {\n        return prev.filter(c => c.id !== activeChat);\n      }\n      return prev;\n    });\n\n    setActiveChat(chatId);\n    setIsMenuOpen(false);\n\n    // Сбрасываем непрочитанные\n    setChats(prev => prev.map(chat =>\n      chat.id === chatId\n        ? { ...chat, unreadCount: 0 }\n        : chat\n    ));\n\n  };\n\n  // Фокус на поле ввода при создании чата\n  useEffect(() => {\n    if (isCreatingChat && newChatInputRef.current) {\n      newChatInputRef.current.focus();\n    }\n  }, [isCreatingChat]);\n\n  // Создание нового чата\n  const handleCreateChat = async (modelId: string) => {\n    // Пустой чат заглушка\n    const newChat: Chat = {\n      id: \"0\",\n      title: `Чат ${chats.filter(c => c.model === modelId).length + 1}`,\n      lastMessage: 'Новый чат создан',\n      model: modelId,\n      isEmpty: true, // Теперь это допустимо\n    };\n\n    setChats(prev => [...prev, newChat]);\n\n    // Чтобы сообщения в новом чате не ссылались на сообщения из других чатов\n    setParent(null)\n    await handleChatChange(newChat.id);\n   \n  };\n\n  // Получение чатов по моделям\n  const getChatsByModel = (modelId: string) => {\n    return chats.filter(chat => chat.model === modelId);\n  };\n\n  // Переименование чата, бэк не поддерживает((\n  const handleRenameChat = (newName: string) => {\n    setChats(prev => prev.map(chat =>\n      chat.id === chatMenu.chatId ? { ...chat, title: newName } : chat\n    ));\n    setChatMenu({ chatId: null, isOpen: false, position: null });\n  };\n\n  // Удаление чата\n  const handleDeleteChat = () => {\n    if (!chatMenu.chatId) return;\n\n    setChats(prev => prev.filter(chat => chat.id !== chatMenu.chatId));\n    if (activeChat === chatMenu.chatId) {\n      const remainingChats = chats.filter(chat => chat.id !== chatMenu.chatId);\n      setActiveChat(remainingChats[0]?.id || '');\n    }\n    delChat(chatMenu.chatId)\n\n    setChatMenu({ chatId: null, isOpen: false, position: null });\n  };\n//_____________________________________________________________________________\n\n  \n\n//__________________MESSAGES_________________________\n  const {messages, setMessages, send} = useMessages(activeChat);\n  const [parentId, setParent] = useState<string | null>(null);\n  const { chunks, error, start } = useStreamMessage(activeChat);\n  const [rootID, setRootID] = useState<string | null>(null)\n  const {upload} = useUploadFile();\n\n\n  // Используется для стриминга сообщений от LLM\n  useEffect(() => {\n    if (chunks.length > 0) {\n      setMessages(prevMessages => {\n        if (prevMessages.length === 0) return prevMessages;\n  \n        const updatedMessages = [...prevMessages];\n        const lastIndex = updatedMessages.length - 1;\n  \n        updatedMessages[lastIndex] = {\n          ...updatedMessages[lastIndex],\n          content: chunks.join(\"\"),\n        };\n  \n        return updatedMessages;\n      });\n    }\n  }, [chunks, parentId]);\n\n  // Автопрокрутка к новым сообщениям\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n\n\n  const handleSendMessage = async () => {    \n    if (!inputText.trim() && !attachment) return;\n    const currentChat = chats.find(chat => chat.id === activeChat);\n    let requestMessage: MessageIn;\n    let newMsg: Message;\n\n\n    // Если текущий чат пустой, то вначале создается с автоматическим название чат\n    // Используя его newChatId создаю новое сообщение юзера и стримлю ответ на это сообщение\n    // Затем когда стриминг закончился итоговый ответ LLM сохраняю и только тогда меня текущий чат на сгенерированный\n    if (!currentChat || currentChat.isEmpty) {\n      const newChatId = await createAuto(inputText, { telegram_id: user.id, model: activeModel, title: 'ЧБД' });\n\n      requestMessage = {\n        chat_id: newChatId,\n        parent_id: null,\n        res_ids: res_ids.ids,\n        role: 'user',\n        content: inputText,\n      };\n      newMsg = await send(requestMessage);\n      setParent(newMsg.id);\n\n      setInputText('');\n      setAttachment(null);\n      setReplyContext(null);\n\n      \n      const tempId = uuidv4();\n      const newResponse: Message = {\n        id: tempId,\n        parent_id: newMsg.id,\n        res_ids: newMsg.res_ids,\n        role: \"assistant\",\n        content: \"\",\n      }\n      setMessages(prev => [...prev, newResponse])\n\n\n      const fullResponse = await start(newMsg.id);\n\n\n      \n      const requestMessageAs: MessageIn = {\n        chat_id: requestMessage.chat_id,\n        parent_id: newMsg.id,\n        res_ids: newMsg.res_ids,\n        role: \"assistant\",\n        content: fullResponse,\n      };\n\n      const responseAs = await send(requestMessageAs);\n      setRootID(responseAs.id)\n      // Заменить временное сообщение (id === \"0\") на настоящее\n      setMessages(prev =>\n        prev.map(msg =>\n          msg.id === tempId\n            ? responseAs  // ✅ подставляем настоящее сообщение\n            : msg\n        )\n      );\n      setRes({ids:[]})\n      await handleChatChange(newChatId);\n      return;\n    } else {\n      requestMessage = {\n        chat_id: activeChat,\n        parent_id: replyContext ? replyContext.messageId: rootID,\n        res_ids: res_ids.ids,\n        role: 'user',\n        content: inputText,\n      };\n      newMsg = await send(requestMessage);\n      setParent(newMsg.id);\n      setRes({ids:[]})\n\n\n    }\n\n    setInputText('');\n    setAttachment(null);\n    setReplyContext(null);\n\n    const tempId = uuidv4();\n    const newResponse: Message = {\n      id: tempId,\n      parent_id: newMsg.id,\n      res_ids: newMsg.res_ids,\n      role: \"assistant\",\n      content: \"\",\n    }\n    setMessages(prev => [...prev, newResponse])\n\n\n    const fullResponse = await start(newMsg.id);\n\n    const requestMessageAs: MessageIn = {\n      chat_id: requestMessage.chat_id,\n      parent_id: newMsg.id,\n      res_ids: newMsg.res_ids,\n      role: \"assistant\",\n      content: fullResponse,\n    };\n\n    const responseAs = await send(requestMessageAs);\n    setRootID(responseAs.id)\n    // Заменить временное сообщение (id === \"0\") на настоящее\n    setMessages(prev =>\n      prev.map(msg =>\n        msg.id === tempId\n          ? responseAs  // ✅ подставляем настоящее сообщение\n          : msg\n      )\n    );\n    \n    // Обновляем последнее сообщение в списке чатов\n    setChats(prev => prev.map(chat =>\n      chat.id === activeChat\n        ? { ...chat, lastMessage: inputText || 'Вложение', unreadCount: 0 }\n        : chat\n    ));\n  };\n\n\n  const [res_ids, setRes] = useState<{ ids: string[] }>({ids:[]})\n  const [childIndexes, setChildIndexes] = useState<{ [parentId: string]: number }>({});\n\n//___________________________________________________________\n\n\n\n  \n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const newChatInputRef = useRef<HTMLInputElement>(null);\n\n  // Темы\n  useEffect(() => {\n    // Простая проверка темы без использования Telegram API\n    const isDarkMode = window.matchMedia?.('(prefers-color-scheme: dark)').matches;\n    const theme = isDarkMode ? 'dark' : 'light';\n\n    // Применяем тему\n    document.body.classList.toggle('dark-theme', theme === 'dark');\n  }, []);\n\n  // Упрощенная функция смены темы\n  const toggleTheme = () => {\n    const newTheme = document.body.classList.contains('dark-theme') ? 'light' : 'dark';\n    document.body.classList.toggle('dark-theme', newTheme === 'dark');\n  };\n\n  // Обработчик вложения файла\n  const handleAttachment = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) {\n      //setAttachment(e.target.files[0]);\n      const res = await upload(activeChat, e.target.files[0])\n      // получаем id чанков файла и сохраняем их в следующее сообщение\n      setRes(res)\n      await send({chat_id: activeChat, role: \"user\", content: e.target.files[0].name})\n    }\n  };\n\n  // Обработчик нажатия клавиш\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  \n  const handleOpenMenu = (chatId: string, e: React.MouseEvent) => {\n    e.stopPropagation();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setChatMenu({\n      chatId,\n      isOpen: true,\n      position: { top: rect.bottom + 5, left: rect.left - 100 }\n    });\n  };\n\n\n  return (\n    <div className=\"chat-app\">\n      {/* Заголовок чата - убираем кнопку создания */}\n      <div className=\"chat-header\">\n        <button className=\"menu-button\" onClick={() => setIsMenuOpen(!isMenuOpen)}>\n          ☰\n        </button>\n        <h2>{chats.find(c => c.id === activeChat)?.title || 'Выберите чат'}</h2>\n        {activeChat && (\n          <button\n            className=\"create-chat-button\"\n            onClick={() => {\n              const currentModel = chats.find(c => c.id === activeChat)?.model || activeModel;\n              handleCreateChat(currentModel);\n            }}\n          >\n            ＋\n          </button>\n        )}\n      </div>\n\n      {/* Боковое меню */}\n      <div className={`side-menu ${isMenuOpen ? 'open' : ''}`}>\n        <button\n          className=\"settings-button\"\n          onClick={() => setSettings(prev => ({ ...prev, isOpen: true }))}\n        >\n          ⚙️\n        </button>\n        {settings.isOpen && (\n          <div className=\"settings-modal\">\n            <div className=\"settings-content\">\n              <button\n                className=\"close-settings\"\n                onClick={() => setSettings(prev => ({ ...prev, isOpen: false }))}\n              >\n                ×\n              </button>\n\n              <div className=\"user-profile\">\n                <img\n                  src={user.photo_url || 'https://via.placeholder.com/100'}\n                  alt=\"Аватар\"\n                  className=\"user-avatar\"\n                  onError={(e) => {\n                    (e.target as HTMLImageElement).src = 'https://via.placeholder.com/100';\n                  }}\n                />\n                <h3>\n                  {[user.first_name, user.last_name]\n                    .filter(Boolean)\n                    .join(' ') || 'Пользователь'}\n                </h3>\n                {user.username && <p>@{user.username}</p>}\n                {user.language_code && <p>Язык: {user.language_code.toUpperCase()}</p>}\n              </div>\n\n              <div className=\"theme-switcher\">\n                <button\n                  onClick={() => {\n                    const newTheme = settings.theme === 'light' ? 'dark' : 'light';\n                    setSettings(prev => ({ ...prev, theme: newTheme }));\n                    // Здесь можно добавить логику смены темы в Telegram WebApp\n                  }}\n                >\n                  {settings.theme === 'light' ? '🌙 Тёмная тема' : '☀️ Светлая тема'}\n                </button>\n              </div>\n            </div>\n            <div\n              className=\"settings-overlay\"\n              onClick={() => setSettings(prev => ({ ...prev, isOpen: false }))}\n            />\n          </div>\n        )}\n\n        <div className=\"menu-header\">\n          <h3>Мои чаты</h3>\n          <button className=\"close-menu\" onClick={() => setIsMenuOpen(false)}>\n            ×\n          </button>\n        </div>\n\n        <div className=\"categories-tabs\">\n          {models.map(model => (\n            <button\n              key={model.id}\n              className={`category-tab ${activeModel === model.id ? 'active' : ''}`}\n              onClick={() => setActiveModel(model.id)}\n            >\n              {model.name}\n            </button>\n          ))}\n        </div>\n\n        <div className=\"chat-list\">\n          {/* Добавляем кнопку создания чата в категорию */}\n          <button\n            className=\"create-chat-in-category small\"\n            onClick={() => handleCreateChat(activeModel)}\n          >\n            ＋ Создать чат\n          </button>\n\n          {getChatsByModel(activeModel).length > 0 ? (\n            [...getChatsByModel(activeModel)].reverse().map(chat => (\n              <div\n                key={chat.id}\n                className={`chat-item ${activeChat === chat.id ? 'active' : ''}`}\n                onClick={() => handleChatChange(chat.id)}\n              >\n                <div className=\"chat-info\">\n                  <div className=\"chat-title\">{chat.title}</div>\n                  <div className=\"chat-preview\">\n                    {chat.lastMessage?.substring(0, 30)}{chat.lastMessage && chat.lastMessage.length > 30 ? '...' : ''}\n                  </div>\n                </div>\n\n                <div className=\"chat-actions\">\n                  <button className=\"chat-menu-button\" onClick={(e) => handleOpenMenu(chat.id, e)}>\n                    ⋮\n                  </button>\n                  {chatMenu.isOpen && (\n                    <>\n                      <div\n                        className=\"menu-overlay\"\n                        onClick={() => setChatMenu({ chatId: null, isOpen: false, position: null })}\n                      />\n                      <div\n                        className=\"chat-context-menu\"\n                        style={{\n                          top: `${chatMenu.position?.top}px`,\n                          left: `${chatMenu.position?.left}px`\n                        }}\n                      >\n                        <button\n                          className=\"menu-item\"\n                          onClick={() => {\n                            const newName = prompt('Введите новое название:',\n                              chats.find(c => c.id === chatMenu.chatId)?.title);\n                            if (newName) handleRenameChat(newName);\n                          }}\n                        >\n                          Переименовать\n                        </button>\n                        <button\n                          className=\"menu-item delete\"\n                          onClick={handleDeleteChat}\n                        >\n                          Удалить чат\n                        </button>\n                      </div>\n                    </>\n                  )}\n                </div>\n              </div>\n            ))\n          ) : (\n            <div className=\"no-chats\">\n              Нет чатов в этой категории\n            </div>\n          )}\n        </div>\n      </div>\n\n\n      {/* Затемнение фона при открытом меню */}\n      {isMenuOpen && (\n        <div className=\"menu-overlay\" onClick={() => setIsMenuOpen(false)} />\n      )}\n\n\n      {/* Ветки сообщений */}\n      <div className=\"messages-container\">\n          {messages\n            .filter(msg => msg.parent_id === null)\n            .map((root) => (\n              <MessageThread\n                key={root.id}\n                message={root}\n                messages={messages}\n                childIndexes={childIndexes}\n                setChildIndexes={setChildIndexes}\n                onLastMessageIdChange={(id) => {\n                  console.log('Current last message ID:', id);\n                  setRootID(id)\n                }}\n                setReplyContext={setReplyContext}\n              />\n            ))}\n        </div>\n\n\n      {/* Панель ввода (только если выбран чат) */}\n      {activeChat && (\n        <div className=\"input-area\">\n          {replyContext && (\n            <div className=\"reply-preview\">\n              Ответ на: {replyContext.messageText}\n              <button onClick={() => setReplyContext(null)}>×</button>\n            </div>\n          )}\n\n          <div className=\"input-container\">\n            <button\n              className=\"attach-button\"\n              onClick={() => fileInputRef.current?.click()}\n            >\n              📎\n            </button>\n\n            <input\n              type=\"file\"\n              ref={fileInputRef}\n              onChange={handleAttachment}\n              style={{ display: 'none' }}\n              accept=\".pdf\"\n            />\n\n            <textarea\n              value={inputText}\n              onChange={(e) => setInputText(e.target.value)}\n              onKeyDown={handleKeyDown}\n              placeholder=\"Напишите сообщение...\"\n              rows={1}\n            />\n\n            <button\n              className=\"send-button\"\n              onClick={handleSendMessage}\n              disabled={!inputText.trim() && !attachment}\n            >\n              {attachment ? '📤' : '➤'}\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}