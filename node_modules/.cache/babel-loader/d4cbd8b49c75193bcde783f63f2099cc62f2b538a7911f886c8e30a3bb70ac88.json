{"ast":null,"code":"var _jsxFileName = \"/home/giicoo/projects/3DOM FRONT/3dom-Front/src/components/message.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MessageThread = ({\n  message,\n  messages,\n  childIndexes,\n  setChildIndexes,\n  setLastRenderedMessageId\n}) => {\n  _s();\n  const children = messages.filter(m => m.parent_id === message.id);\n  const index = childIndexes[message.id] || 0;\n  const handleNext = () => {\n    setChildIndexes(prev => ({\n      ...prev,\n      [message.id]: (index + 1) % children.length\n    }));\n  };\n  const handlePrev = () => {\n    setChildIndexes(prev => ({\n      ...prev,\n      [message.id]: (index - 1 + children.length) % children.length\n    }));\n  };\n  const messageRef = useRef(null);\n\n  // Обновление последнего отрендеренного ID, когда компонент рендерится\n  React.useEffect(() => {\n    if (messageRef.current) {\n      setLastRenderedMessageId(message.id); // Обновляем последний отрендеренный ID\n    }\n  }, [message.id, setLastRenderedMessageId]); // Будет вызываться при изменении message.id\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [message.parent_id === \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.role}`,\n      ref: messageRef,\n      children: message.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), children.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.role}`,\n        ref: messageRef,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: children[index].content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), children.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePrev,\n            children: \"\\u25C0\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNext,\n            children: \"\\u25B6\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MessageThread, {\n        message: children[index],\n        messages: messages,\n        childIndexes: childIndexes,\n        setChildIndexes: setChildIndexes,\n        setLastRenderedMessageId: setLastRenderedMessageId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_s(MessageThread, \"Z5DQrujTonaXIzjwqxUSzbM7ErA=\");\n_c = MessageThread;\nvar _c;\n$RefreshReg$(_c, \"MessageThread\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","MessageThread","message","messages","childIndexes","setChildIndexes","setLastRenderedMessageId","_s","children","filter","m","parent_id","id","index","handleNext","prev","length","handlePrev","messageRef","useEffect","current","className","role","ref","content","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/giicoo/projects/3DOM FRONT/3dom-Front/src/components/message.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport type { Message } from '../types';\n\ntype MessageThreadProps = {\n  message: Message;\n  messages: Message[];\n  childIndexes: { [parentId: string]: number };\n  setChildIndexes: React.Dispatch<React.SetStateAction<{ [parentId: string]: number }>>;\n  setLastRenderedMessageId: React.Dispatch<React.SetStateAction<string | null>>; // Функция для обновления ID последнего отрендеренного сообщения\n};\n\nexport const MessageThread: React.FC<MessageThreadProps> = ({\n  message,\n  messages,\n  childIndexes,\n  setChildIndexes,\n  setLastRenderedMessageId,\n}) => {\n  const children = messages.filter((m) => m.parent_id === message.id);\n  const index = childIndexes[message.id] || 0;\n\n  const handleNext = () => {\n    setChildIndexes((prev) => ({\n      ...prev,\n      [message.id]: (index + 1) % children.length,\n    }));\n  };\n\n  const handlePrev = () => {\n    setChildIndexes((prev) => ({\n      ...prev,\n      [message.id]: (index - 1 + children.length) % children.length,\n    }));\n  };\n\n  const messageRef = useRef<HTMLDivElement>(null);\n\n  // Обновление последнего отрендеренного ID, когда компонент рендерится\n  React.useEffect(() => {\n    if (messageRef.current) {\n      setLastRenderedMessageId(message.id); // Обновляем последний отрендеренный ID\n    }\n  }, [message.id, setLastRenderedMessageId]); // Будет вызываться при изменении message.id\n\n  return (\n    <>\n      {/* Родительское сообщение */}\n      {message.parent_id === \"\" && (\n        <div className={`message ${message.role}`} ref={messageRef}>\n          {message.content}\n        </div>\n      )}\n\n      {/* Если есть дети — рендерим их как отдельные блоки */}\n      {children.length > 0 && (\n        <>\n          <div className={`message ${message.role}`} ref={messageRef}>\n            <div className=\"message-content\">\n              {children[index].content}\n            </div>\n            {children.length > 1 && (\n              <div className=\"message-controls\">\n                <button onClick={handlePrev}>◀️</button>\n                <button onClick={handleNext}>▶️</button>\n              </div>\n            )}\n          </div>\n\n          {/* Рекурсивный рендер для детей */}\n          <MessageThread\n            message={children[index]}\n            messages={messages}\n            childIndexes={childIndexes}\n            setChildIndexes={setChildIndexes}\n            setLastRenderedMessageId={setLastRenderedMessageId}\n          />\n        </>\n      )}\n    </>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}