{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import'./ChatApp.css';import{useChats}from'./hooks/useChats';import{useMessages,useStreamMessage}from'./hooks/useMessages';import{MessageThread}from'./components/message';import{v4 as uuidv4}from'uuid';import{useUploadFile}from'./hooks/useFile';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ChatApp=()=>{var _window$Telegram,_window$Telegram$WebA,_window$Telegram$WebA2,_chats$find;const[settings,setSettings]=useState({isOpen:false,theme:'light'});// Получаем данные пользователя из Telegram WebApp\nconst user=((_window$Telegram=window.Telegram)===null||_window$Telegram===void 0?void 0:(_window$Telegram$WebA=_window$Telegram.WebApp)===null||_window$Telegram$WebA===void 0?void 0:(_window$Telegram$WebA2=_window$Telegram$WebA.initDataUnsafe)===null||_window$Telegram$WebA2===void 0?void 0:_window$Telegram$WebA2.user)||{id:11,first_name:'Гость',photo_url:'https://via.placeholder.com/100'};const[inputText,setInputText]=useState('');const[replyContext,setReplyContext]=useState(null);const[attachment,setAttachment]=useState(null);const[isMenuOpen,setIsMenuOpen]=useState(false);const[chatMenu,setChatMenu]=useState({chatId:null,isOpen:false,position:null});//____________MODELS_____________________________________________________________\n// Это три модели которые есть в backend\nconst[models,setModel]=useState([{id:'llama2',name:'Llama 2'},{id:'deepseek-r1:8b',name:'DeepSeek'},{id:'mistral',name:'Mistral'}]);const[activeModel,setActiveModel]=useState('llama2');//_____________________________________________________________________________________________\n//_____________CHATS__________________________________________________________________________\nconst{chats,setChats,createAuto,delChat}=useChats(user.id);const[activeChat,setActiveChat]=useState('');const[isCreatingChat,setIsCreatingChat]=useState(false);// Переключение чата\nconst handleChatChange=async chatId=>{// Удаляем предыдущий чат, если он пустой\nsetChats(prev=>{const prevChat=prev.find(c=>c.id===activeChat);if(prevChat!==null&&prevChat!==void 0&&prevChat.isEmpty){return prev.filter(c=>c.id!==activeChat);}return prev;});setActiveChat(chatId);setIsMenuOpen(false);// Сбрасываем непрочитанные\nsetChats(prev=>prev.map(chat=>chat.id===chatId?{...chat,unreadCount:0}:chat));};// Фокус на поле ввода при создании чата\nuseEffect(()=>{if(isCreatingChat&&newChatInputRef.current){newChatInputRef.current.focus();}},[isCreatingChat]);// Создание нового чата\nconst handleCreateChat=async modelId=>{// Пустой чат заглушка\nconst newChat={id:\"0\",title:`Чат ${chats.filter(c=>c.model===modelId).length+1}`,lastMessage:'Новый чат создан',model:modelId,isEmpty:true// Теперь это допустимо\n};setChats(prev=>[...prev,newChat]);// Чтобы сообщения в новом чате не ссылались на сообщения из других чатов\nsetParent(null);await handleChatChange(newChat.id);};// Получение чатов по моделям\nconst getChatsByModel=modelId=>{return chats.filter(chat=>chat.model===modelId);};// Переименование чата, бэк не поддерживает((\nconst handleRenameChat=newName=>{setChats(prev=>prev.map(chat=>chat.id===chatMenu.chatId?{...chat,title:newName}:chat));setChatMenu({chatId:null,isOpen:false,position:null});};// Удаление чата\nconst handleDeleteChat=()=>{if(!chatMenu.chatId)return;setChats(prev=>prev.filter(chat=>chat.id!==chatMenu.chatId));if(activeChat===chatMenu.chatId){var _remainingChats$;const remainingChats=chats.filter(chat=>chat.id!==chatMenu.chatId);setActiveChat(((_remainingChats$=remainingChats[0])===null||_remainingChats$===void 0?void 0:_remainingChats$.id)||'');}delChat(chatMenu.chatId);setChatMenu({chatId:null,isOpen:false,position:null});};//_____________________________________________________________________________\n//__________________MESSAGES_________________________\nconst{messages,setMessages,send}=useMessages(activeChat);const[parentId,setParent]=useState(null);const{chunks,error,start}=useStreamMessage(activeChat);const[rootID,setRootID]=useState(null);const{upload}=useUploadFile();// Используется для стриминга сообщений от LLM\nuseEffect(()=>{if(chunks.length>0){setMessages(prevMessages=>{if(prevMessages.length===0)return prevMessages;const updatedMessages=[...prevMessages];const lastIndex=updatedMessages.length-1;updatedMessages[lastIndex]={...updatedMessages[lastIndex],content:chunks.join(\"\")};return updatedMessages;});}},[chunks,parentId]);// Автопрокрутка к новым сообщениям\nuseEffect(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});},[messages]);const handleSendMessage=async()=>{if(!inputText.trim()&&!attachment)return;const currentChat=chats.find(chat=>chat.id===activeChat);let requestMessage;let newMsg;// Если текущий чат пустой, то вначале создается с автоматическим название чат\n// Используя его newChatId создаю новое сообщение юзера и стримлю ответ на это сообщение\n// Затем когда стриминг закончился итоговый ответ LLM сохраняю и только тогда меня текущий чат на сгенерированный\nif(!currentChat||currentChat.isEmpty){const newChatId=await createAuto(inputText,{telegram_id:user.id,model:activeModel,title:'ЧБД'});requestMessage={chat_id:newChatId,parent_id:null,res_ids:res_ids.ids,role:'user',content:inputText};newMsg=await send(requestMessage);setParent(newMsg.id);setInputText('');setAttachment(null);setReplyContext(null);const tempId=uuidv4();const newResponse={id:tempId,parent_id:newMsg.id,res_ids:newMsg.res_ids,role:\"assistant\",content:\"\"};setMessages(prev=>[...prev,newResponse]);const fullResponse=await start(newMsg.id);const requestMessageAs={chat_id:requestMessage.chat_id,parent_id:newMsg.id,res_ids:newMsg.res_ids,role:\"assistant\",content:fullResponse};const responseAs=await send(requestMessageAs);setRootID(responseAs.id);// Заменить временное сообщение (id === \"0\") на настоящее\nsetMessages(prev=>prev.map(msg=>msg.id===tempId?responseAs// ✅ подставляем настоящее сообщение\n:msg));setRes({ids:[]});await handleChatChange(newChatId);return;}else{requestMessage={chat_id:activeChat,parent_id:replyContext?replyContext.messageId:rootID,res_ids:res_ids.ids,role:'user',content:inputText};newMsg=await send(requestMessage);setParent(newMsg.id);setRes({ids:[]});}setInputText('');setAttachment(null);setReplyContext(null);const tempId=uuidv4();const newResponse={id:tempId,parent_id:newMsg.id,res_ids:newMsg.res_ids,role:\"assistant\",content:\"\"};setMessages(prev=>[...prev,newResponse]);const fullResponse=await start(newMsg.id);const requestMessageAs={chat_id:requestMessage.chat_id,parent_id:newMsg.id,res_ids:newMsg.res_ids,role:\"assistant\",content:fullResponse};const responseAs=await send(requestMessageAs);setRootID(responseAs.id);// Заменить временное сообщение (id === \"0\") на настоящее\nsetMessages(prev=>prev.map(msg=>msg.id===tempId?responseAs// ✅ подставляем настоящее сообщение\n:msg));// Обновляем последнее сообщение в списке чатов\nsetChats(prev=>prev.map(chat=>chat.id===activeChat?{...chat,lastMessage:inputText||'Вложение',unreadCount:0}:chat));};const[res_ids,setRes]=useState({ids:[]});const[childIndexes,setChildIndexes]=useState({});//___________________________________________________________\nconst fileInputRef=useRef(null);const messagesEndRef=useRef(null);const newChatInputRef=useRef(null);// Темы\nuseEffect(()=>{var _window$matchMedia,_window;// Простая проверка темы без использования Telegram API\nconst isDarkMode=(_window$matchMedia=(_window=window).matchMedia)===null||_window$matchMedia===void 0?void 0:_window$matchMedia.call(_window,'(prefers-color-scheme: dark)').matches;const theme=isDarkMode?'dark':'light';// Применяем тему\ndocument.body.classList.toggle('dark-theme',theme==='dark');},[]);// Упрощенная функция смены темы\nconst toggleTheme=()=>{const newTheme=document.body.classList.contains('dark-theme')?'light':'dark';document.body.classList.toggle('dark-theme',newTheme==='dark');};// Обработчик вложения файла\nconst handleAttachment=async e=>{if(e.target.files&&e.target.files[0]){//setAttachment(e.target.files[0]);\nconst res=await upload(activeChat,e.target.files[0]);// получаем id чанков файла и сохраняем их в следующее сообщение\nsetRes(res);await send({chat_id:activeChat,role:\"user\",content:e.target.files[0].name});}};// Обработчик нажатия клавиш\nconst handleKeyDown=e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();handleSendMessage();}};const handleOpenMenu=(chatId,e)=>{e.stopPropagation();const rect=e.currentTarget.getBoundingClientRect();setChatMenu({chatId,isOpen:true,position:{top:rect.bottom+5,left:rect.left-100}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-app\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"menu-button\",onClick:()=>setIsMenuOpen(!isMenuOpen),children:\"\\u2630\"}),/*#__PURE__*/_jsx(\"h2\",{children:((_chats$find=chats.find(c=>c.id===activeChat))===null||_chats$find===void 0?void 0:_chats$find.title)||'Выберите чат'}),activeChat&&/*#__PURE__*/_jsx(\"button\",{className:\"create-chat-button\",onClick:()=>{var _chats$find2;const currentModel=((_chats$find2=chats.find(c=>c.id===activeChat))===null||_chats$find2===void 0?void 0:_chats$find2.model)||activeModel;handleCreateChat(currentModel);},children:\"\\uFF0B\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:`side-menu ${isMenuOpen?'open':''}`,children:[/*#__PURE__*/_jsx(\"button\",{className:\"settings-button\",onClick:()=>setSettings(prev=>({...prev,isOpen:true})),children:\"\\u2699\\uFE0F\"}),settings.isOpen&&/*#__PURE__*/_jsxs(\"div\",{className:\"settings-modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"settings-content\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"close-settings\",onClick:()=>setSettings(prev=>({...prev,isOpen:false})),children:\"\\xD7\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-profile\",children:[/*#__PURE__*/_jsx(\"img\",{src:user.photo_url||'https://via.placeholder.com/100',alt:\"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\",className:\"user-avatar\",onError:e=>{e.target.src='https://via.placeholder.com/100';}}),/*#__PURE__*/_jsx(\"h3\",{children:[user.first_name,user.last_name].filter(Boolean).join(' ')||'Пользователь'}),user.username&&/*#__PURE__*/_jsxs(\"p\",{children:[\"@\",user.username]}),user.language_code&&/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u042F\\u0437\\u044B\\u043A: \",user.language_code.toUpperCase()]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"theme-switcher\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const newTheme=settings.theme==='light'?'dark':'light';setSettings(prev=>({...prev,theme:newTheme}));// Здесь можно добавить логику смены темы в Telegram WebApp\n},children:settings.theme==='light'?'🌙 Тёмная тема':'☀️ Светлая тема'})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"settings-overlay\",onClick:()=>setSettings(prev=>({...prev,isOpen:false}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"menu-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u041C\\u043E\\u0438 \\u0447\\u0430\\u0442\\u044B\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close-menu\",onClick:()=>setIsMenuOpen(false),children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"categories-tabs\",children:models.map(model=>/*#__PURE__*/_jsx(\"button\",{className:`category-tab ${activeModel===model.id?'active':''}`,onClick:()=>setActiveModel(model.id),children:model.name},model.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-list\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"create-chat-in-category small\",onClick:()=>handleCreateChat(activeModel),children:\"\\uFF0B \\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0447\\u0430\\u0442\"}),getChatsByModel(activeModel).length>0?[...getChatsByModel(activeModel)].reverse().map(chat=>{var _chat$lastMessage,_chatMenu$position,_chatMenu$position2;return/*#__PURE__*/_jsxs(\"div\",{className:`chat-item ${activeChat===chat.id?'active':''}`,onClick:()=>handleChatChange(chat.id),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-title\",children:chat.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-preview\",children:[(_chat$lastMessage=chat.lastMessage)===null||_chat$lastMessage===void 0?void 0:_chat$lastMessage.substring(0,30),chat.lastMessage&&chat.lastMessage.length>30?'...':'']})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"chat-menu-button\",onClick:e=>handleOpenMenu(chat.id,e),children:\"\\u22EE\"}),chatMenu.isOpen&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"menu-overlay\",onClick:()=>setChatMenu({chatId:null,isOpen:false,position:null})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-context-menu\",style:{top:`${(_chatMenu$position=chatMenu.position)===null||_chatMenu$position===void 0?void 0:_chatMenu$position.top}px`,left:`${(_chatMenu$position2=chatMenu.position)===null||_chatMenu$position2===void 0?void 0:_chatMenu$position2.left}px`},children:[/*#__PURE__*/_jsx(\"button\",{className:\"menu-item\",onClick:()=>{var _chats$find3;const newName=prompt('Введите новое название:',(_chats$find3=chats.find(c=>c.id===chatMenu.chatId))===null||_chats$find3===void 0?void 0:_chats$find3.title);if(newName)handleRenameChat(newName);},children:\"\\u041F\\u0435\\u0440\\u0435\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u0442\\u044C\"}),/*#__PURE__*/_jsx(\"button\",{className:\"menu-item delete\",onClick:handleDeleteChat,children:\"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0447\\u0430\\u0442\"})]})]})]})]},chat.id);}):/*#__PURE__*/_jsx(\"div\",{className:\"no-chats\",children:\"\\u041D\\u0435\\u0442 \\u0447\\u0430\\u0442\\u043E\\u0432 \\u0432 \\u044D\\u0442\\u043E\\u0439 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438\"})]})]}),isMenuOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"menu-overlay\",onClick:()=>setIsMenuOpen(false)}),/*#__PURE__*/_jsx(\"div\",{className:\"messages-container\",children:messages.filter(msg=>msg.parent_id===null).map(root=>/*#__PURE__*/_jsx(MessageThread,{message:root,messages:messages,childIndexes:childIndexes,setChildIndexes:setChildIndexes,onLastMessageIdChange:id=>{console.log('Current last message ID:',id);setRootID(id);},setReplyContext:setReplyContext},root.id))}),activeChat&&/*#__PURE__*/_jsxs(\"div\",{className:\"input-area\",children:[replyContext&&/*#__PURE__*/_jsxs(\"div\",{className:\"reply-preview\",children:[\"\\u041E\\u0442\\u0432\\u0435\\u0442 \\u043D\\u0430: \",replyContext.messageText,/*#__PURE__*/_jsx(\"button\",{onClick:()=>setReplyContext(null),children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"attach-button\",onClick:()=>{var _fileInputRef$current;return(_fileInputRef$current=fileInputRef.current)===null||_fileInputRef$current===void 0?void 0:_fileInputRef$current.click();},children:\"\\uD83D\\uDCCE\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",ref:fileInputRef,onChange:handleAttachment,style:{display:'none'},accept:\".pdf\"}),/*#__PURE__*/_jsx(\"textarea\",{value:inputText,onChange:e=>setInputText(e.target.value),onKeyDown:handleKeyDown,placeholder:\"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",rows:1}),/*#__PURE__*/_jsx(\"button\",{className:\"send-button\",onClick:handleSendMessage,disabled:!inputText.trim()&&!attachment,children:attachment?'📤':'➤'})]})]})]});};export default ChatApp;","map":{"version":3,"names":["React","useState","useRef","useEffect","useChats","useMessages","useStreamMessage","MessageThread","v4","uuidv4","useUploadFile","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ChatApp","_window$Telegram","_window$Telegram$WebA","_window$Telegram$WebA2","_chats$find","settings","setSettings","isOpen","theme","user","window","Telegram","WebApp","initDataUnsafe","id","first_name","photo_url","inputText","setInputText","replyContext","setReplyContext","attachment","setAttachment","isMenuOpen","setIsMenuOpen","chatMenu","setChatMenu","chatId","position","models","setModel","name","activeModel","setActiveModel","chats","setChats","createAuto","delChat","activeChat","setActiveChat","isCreatingChat","setIsCreatingChat","handleChatChange","prev","prevChat","find","c","isEmpty","filter","map","chat","unreadCount","newChatInputRef","current","focus","handleCreateChat","modelId","newChat","title","model","length","lastMessage","setParent","getChatsByModel","handleRenameChat","newName","handleDeleteChat","_remainingChats$","remainingChats","messages","setMessages","send","parentId","chunks","error","start","rootID","setRootID","upload","prevMessages","updatedMessages","lastIndex","content","join","_messagesEndRef$curre","messagesEndRef","scrollIntoView","behavior","handleSendMessage","trim","currentChat","requestMessage","newMsg","newChatId","telegram_id","chat_id","parent_id","res_ids","ids","role","tempId","newResponse","fullResponse","requestMessageAs","responseAs","msg","setRes","messageId","childIndexes","setChildIndexes","fileInputRef","_window$matchMedia","_window","isDarkMode","matchMedia","call","matches","document","body","classList","toggle","toggleTheme","newTheme","contains","handleAttachment","e","target","files","res","handleKeyDown","key","shiftKey","preventDefault","handleOpenMenu","stopPropagation","rect","currentTarget","getBoundingClientRect","top","bottom","left","className","children","onClick","_chats$find2","currentModel","src","alt","onError","last_name","Boolean","username","language_code","toUpperCase","reverse","_chat$lastMessage","_chatMenu$position","_chatMenu$position2","substring","style","_chats$find3","prompt","root","message","onLastMessageIdChange","console","log","messageText","_fileInputRef$current","click","type","ref","onChange","display","accept","value","onKeyDown","placeholder","rows","disabled"],"sources":["/home/giicoo/projects/3DOM FRONT/3dom-Front/src/App.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useContext } from 'react';\nimport './ChatApp.css';\nimport { Chat, ChatMenu, Message, Model, ReplyContext, Settings, TelegramUser } from './types';\nimport { useChats } from './hooks/useChats';\nimport { useMessages, useStreamMessage } from './hooks/useMessages';\nimport { MessageIn } from './api/types';\nimport { MessageThread } from './components/message'\nimport { v4 as uuidv4 } from 'uuid';\nimport { useUploadFile } from './hooks/useFile';\n\n\nconst ChatApp: React.FC = () => {\n  const [settings, setSettings] = useState<Settings>({\n    isOpen: false,\n    theme: 'light'\n  });\n\n  // Получаем данные пользователя из Telegram WebApp\n  const user: TelegramUser = window.Telegram?.WebApp?.initDataUnsafe?.user || {\n    id:11,\n    first_name: 'Гость',\n    photo_url: 'https://via.placeholder.com/100'\n  };\n\n\n  const [inputText, setInputText] = useState('');\n  const [replyContext, setReplyContext] = useState<ReplyContext | null>(null);\n  const [attachment, setAttachment] = useState<File | null>(null);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const [chatMenu, setChatMenu] = useState<ChatMenu>({\n    chatId: null,\n    isOpen: false,\n    position: null\n  });\n\n\n  //____________MODELS_____________________________________________________________\n  // Это три модели которые есть в backend\n  const [models, setModel] = useState<Model[]>([\n    { id: 'llama2', name: 'Llama 2' },\n    { id: 'deepseek-r1:8b', name: 'DeepSeek' },\n    { id: 'mistral', name: 'Mistral' },\n  ]);\n  const [activeModel, setActiveModel] = useState<string>('llama2');\n  //_____________________________________________________________________________________________\n\n//_____________CHATS__________________________________________________________________________\n  const {chats, setChats, createAuto, delChat} = useChats(user.id)\n  const [activeChat, setActiveChat] = useState<string>('');\n  const [isCreatingChat, setIsCreatingChat] = useState(false);\n\n  // Переключение чата\n  const handleChatChange = async (chatId: string) => {\n    // Удаляем предыдущий чат, если он пустой\n    setChats(prev => {\n      const prevChat = prev.find(c => c.id === activeChat);\n      if (prevChat?.isEmpty) {\n        return prev.filter(c => c.id !== activeChat);\n      }\n      return prev;\n    });\n\n    setActiveChat(chatId);\n    setIsMenuOpen(false);\n\n    // Сбрасываем непрочитанные\n    setChats(prev => prev.map(chat =>\n      chat.id === chatId\n        ? { ...chat, unreadCount: 0 }\n        : chat\n    ));\n\n  };\n\n  // Фокус на поле ввода при создании чата\n  useEffect(() => {\n    if (isCreatingChat && newChatInputRef.current) {\n      newChatInputRef.current.focus();\n    }\n  }, [isCreatingChat]);\n\n  // Создание нового чата\n  const handleCreateChat = async (modelId: string) => {\n    // Пустой чат заглушка\n    const newChat: Chat = {\n      id: \"0\",\n      title: `Чат ${chats.filter(c => c.model === modelId).length + 1}`,\n      lastMessage: 'Новый чат создан',\n      model: modelId,\n      isEmpty: true, // Теперь это допустимо\n    };\n\n    setChats(prev => [...prev, newChat]);\n\n    // Чтобы сообщения в новом чате не ссылались на сообщения из других чатов\n    setParent(null)\n    await handleChatChange(newChat.id);\n   \n  };\n\n  // Получение чатов по моделям\n  const getChatsByModel = (modelId: string) => {\n    return chats.filter(chat => chat.model === modelId);\n  };\n\n  // Переименование чата, бэк не поддерживает((\n  const handleRenameChat = (newName: string) => {\n    setChats(prev => prev.map(chat =>\n      chat.id === chatMenu.chatId ? { ...chat, title: newName } : chat\n    ));\n    setChatMenu({ chatId: null, isOpen: false, position: null });\n  };\n\n  // Удаление чата\n  const handleDeleteChat = () => {\n    if (!chatMenu.chatId) return;\n\n    setChats(prev => prev.filter(chat => chat.id !== chatMenu.chatId));\n    if (activeChat === chatMenu.chatId) {\n      const remainingChats = chats.filter(chat => chat.id !== chatMenu.chatId);\n      setActiveChat(remainingChats[0]?.id || '');\n    }\n    delChat(chatMenu.chatId)\n\n    setChatMenu({ chatId: null, isOpen: false, position: null });\n  };\n//_____________________________________________________________________________\n\n  \n\n//__________________MESSAGES_________________________\n  const {messages, setMessages, send} = useMessages(activeChat);\n  const [parentId, setParent] = useState<string | null>(null);\n  const { chunks, error, start } = useStreamMessage(activeChat);\n  const [rootID, setRootID] = useState<string | null>(null)\n  const {upload} = useUploadFile();\n\n\n  // Используется для стриминга сообщений от LLM\n  useEffect(() => {\n    if (chunks.length > 0) {\n      setMessages(prevMessages => {\n        if (prevMessages.length === 0) return prevMessages;\n  \n        const updatedMessages = [...prevMessages];\n        const lastIndex = updatedMessages.length - 1;\n  \n        updatedMessages[lastIndex] = {\n          ...updatedMessages[lastIndex],\n          content: chunks.join(\"\"),\n        };\n  \n        return updatedMessages;\n      });\n    }\n  }, [chunks, parentId]);\n\n  // Автопрокрутка к новым сообщениям\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n\n\n  const handleSendMessage = async () => {    \n    if (!inputText.trim() && !attachment) return;\n    const currentChat = chats.find(chat => chat.id === activeChat);\n    let requestMessage: MessageIn;\n    let newMsg: Message;\n\n\n    // Если текущий чат пустой, то вначале создается с автоматическим название чат\n    // Используя его newChatId создаю новое сообщение юзера и стримлю ответ на это сообщение\n    // Затем когда стриминг закончился итоговый ответ LLM сохраняю и только тогда меня текущий чат на сгенерированный\n    if (!currentChat || currentChat.isEmpty) {\n      const newChatId = await createAuto(inputText, { telegram_id: user.id, model: activeModel, title: 'ЧБД' });\n\n      requestMessage = {\n        chat_id: newChatId,\n        parent_id: null,\n        res_ids: res_ids.ids,\n        role: 'user',\n        content: inputText,\n      };\n      newMsg = await send(requestMessage);\n      setParent(newMsg.id);\n\n      setInputText('');\n      setAttachment(null);\n      setReplyContext(null);\n\n      \n      const tempId = uuidv4();\n      const newResponse: Message = {\n        id: tempId,\n        parent_id: newMsg.id,\n        res_ids: newMsg.res_ids,\n        role: \"assistant\",\n        content: \"\",\n      }\n      setMessages(prev => [...prev, newResponse])\n\n\n      const fullResponse = await start(newMsg.id);\n\n\n      \n      const requestMessageAs: MessageIn = {\n        chat_id: requestMessage.chat_id,\n        parent_id: newMsg.id,\n        res_ids: newMsg.res_ids,\n        role: \"assistant\",\n        content: fullResponse,\n      };\n\n      const responseAs = await send(requestMessageAs);\n      setRootID(responseAs.id)\n      // Заменить временное сообщение (id === \"0\") на настоящее\n      setMessages(prev =>\n        prev.map(msg =>\n          msg.id === tempId\n            ? responseAs  // ✅ подставляем настоящее сообщение\n            : msg\n        )\n      );\n      setRes({ids:[]})\n      await handleChatChange(newChatId);\n      return;\n    } else {\n      requestMessage = {\n        chat_id: activeChat,\n        parent_id: replyContext ? replyContext.messageId: rootID,\n        res_ids: res_ids.ids,\n        role: 'user',\n        content: inputText,\n      };\n      newMsg = await send(requestMessage);\n      setParent(newMsg.id);\n      setRes({ids:[]})\n\n\n    }\n\n    setInputText('');\n    setAttachment(null);\n    setReplyContext(null);\n\n    const tempId = uuidv4();\n    const newResponse: Message = {\n      id: tempId,\n      parent_id: newMsg.id,\n      res_ids: newMsg.res_ids,\n      role: \"assistant\",\n      content: \"\",\n    }\n    setMessages(prev => [...prev, newResponse])\n\n\n    const fullResponse = await start(newMsg.id);\n\n    const requestMessageAs: MessageIn = {\n      chat_id: requestMessage.chat_id,\n      parent_id: newMsg.id,\n      res_ids: newMsg.res_ids,\n      role: \"assistant\",\n      content: fullResponse,\n    };\n\n    const responseAs = await send(requestMessageAs);\n    setRootID(responseAs.id)\n    // Заменить временное сообщение (id === \"0\") на настоящее\n    setMessages(prev =>\n      prev.map(msg =>\n        msg.id === tempId\n          ? responseAs  // ✅ подставляем настоящее сообщение\n          : msg\n      )\n    );\n    \n    // Обновляем последнее сообщение в списке чатов\n    setChats(prev => prev.map(chat =>\n      chat.id === activeChat\n        ? { ...chat, lastMessage: inputText || 'Вложение', unreadCount: 0 }\n        : chat\n    ));\n  };\n\n\n  const [res_ids, setRes] = useState<{ ids: string[] }>({ids:[]})\n  const [childIndexes, setChildIndexes] = useState<{ [parentId: string]: number }>({});\n\n//___________________________________________________________\n\n\n\n  \n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const newChatInputRef = useRef<HTMLInputElement>(null);\n\n  // Темы\n  useEffect(() => {\n    // Простая проверка темы без использования Telegram API\n    const isDarkMode = window.matchMedia?.('(prefers-color-scheme: dark)').matches;\n    const theme = isDarkMode ? 'dark' : 'light';\n\n    // Применяем тему\n    document.body.classList.toggle('dark-theme', theme === 'dark');\n  }, []);\n\n  // Упрощенная функция смены темы\n  const toggleTheme = () => {\n    const newTheme = document.body.classList.contains('dark-theme') ? 'light' : 'dark';\n    document.body.classList.toggle('dark-theme', newTheme === 'dark');\n  };\n\n  // Обработчик вложения файла\n  const handleAttachment = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) {\n      //setAttachment(e.target.files[0]);\n      const res = await upload(activeChat, e.target.files[0])\n      // получаем id чанков файла и сохраняем их в следующее сообщение\n      setRes(res)\n      await send({chat_id: activeChat, role: \"user\", content: e.target.files[0].name})\n    }\n  };\n\n  // Обработчик нажатия клавиш\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  \n  const handleOpenMenu = (chatId: string, e: React.MouseEvent) => {\n    e.stopPropagation();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setChatMenu({\n      chatId,\n      isOpen: true,\n      position: { top: rect.bottom + 5, left: rect.left - 100 }\n    });\n  };\n\n\n  return (\n    <div className=\"chat-app\">\n      {/* Заголовок чата - убираем кнопку создания */}\n      <div className=\"chat-header\">\n        <button className=\"menu-button\" onClick={() => setIsMenuOpen(!isMenuOpen)}>\n          ☰\n        </button>\n        <h2>{chats.find(c => c.id === activeChat)?.title || 'Выберите чат'}</h2>\n        {activeChat && (\n          <button\n            className=\"create-chat-button\"\n            onClick={() => {\n              const currentModel = chats.find(c => c.id === activeChat)?.model || activeModel;\n              handleCreateChat(currentModel);\n            }}\n          >\n            ＋\n          </button>\n        )}\n      </div>\n\n      {/* Боковое меню */}\n      <div className={`side-menu ${isMenuOpen ? 'open' : ''}`}>\n        <button\n          className=\"settings-button\"\n          onClick={() => setSettings(prev => ({ ...prev, isOpen: true }))}\n        >\n          ⚙️\n        </button>\n        {settings.isOpen && (\n          <div className=\"settings-modal\">\n            <div className=\"settings-content\">\n              <button\n                className=\"close-settings\"\n                onClick={() => setSettings(prev => ({ ...prev, isOpen: false }))}\n              >\n                ×\n              </button>\n\n              <div className=\"user-profile\">\n                <img\n                  src={user.photo_url || 'https://via.placeholder.com/100'}\n                  alt=\"Аватар\"\n                  className=\"user-avatar\"\n                  onError={(e) => {\n                    (e.target as HTMLImageElement).src = 'https://via.placeholder.com/100';\n                  }}\n                />\n                <h3>\n                  {[user.first_name, user.last_name]\n                    .filter(Boolean)\n                    .join(' ') || 'Пользователь'}\n                </h3>\n                {user.username && <p>@{user.username}</p>}\n                {user.language_code && <p>Язык: {user.language_code.toUpperCase()}</p>}\n              </div>\n\n              <div className=\"theme-switcher\">\n                <button\n                  onClick={() => {\n                    const newTheme = settings.theme === 'light' ? 'dark' : 'light';\n                    setSettings(prev => ({ ...prev, theme: newTheme }));\n                    // Здесь можно добавить логику смены темы в Telegram WebApp\n                  }}\n                >\n                  {settings.theme === 'light' ? '🌙 Тёмная тема' : '☀️ Светлая тема'}\n                </button>\n              </div>\n            </div>\n            <div\n              className=\"settings-overlay\"\n              onClick={() => setSettings(prev => ({ ...prev, isOpen: false }))}\n            />\n          </div>\n        )}\n\n        <div className=\"menu-header\">\n          <h3>Мои чаты</h3>\n          <button className=\"close-menu\" onClick={() => setIsMenuOpen(false)}>\n            ×\n          </button>\n        </div>\n\n        <div className=\"categories-tabs\">\n          {models.map(model => (\n            <button\n              key={model.id}\n              className={`category-tab ${activeModel === model.id ? 'active' : ''}`}\n              onClick={() => setActiveModel(model.id)}\n            >\n              {model.name}\n            </button>\n          ))}\n        </div>\n\n        <div className=\"chat-list\">\n          {/* Добавляем кнопку создания чата в категорию */}\n          <button\n            className=\"create-chat-in-category small\"\n            onClick={() => handleCreateChat(activeModel)}\n          >\n            ＋ Создать чат\n          </button>\n\n          {getChatsByModel(activeModel).length > 0 ? (\n            [...getChatsByModel(activeModel)].reverse().map(chat => (\n              <div\n                key={chat.id}\n                className={`chat-item ${activeChat === chat.id ? 'active' : ''}`}\n                onClick={() => handleChatChange(chat.id)}\n              >\n                <div className=\"chat-info\">\n                  <div className=\"chat-title\">{chat.title}</div>\n                  <div className=\"chat-preview\">\n                    {chat.lastMessage?.substring(0, 30)}{chat.lastMessage && chat.lastMessage.length > 30 ? '...' : ''}\n                  </div>\n                </div>\n\n                <div className=\"chat-actions\">\n                  <button className=\"chat-menu-button\" onClick={(e) => handleOpenMenu(chat.id, e)}>\n                    ⋮\n                  </button>\n                  {chatMenu.isOpen && (\n                    <>\n                      <div\n                        className=\"menu-overlay\"\n                        onClick={() => setChatMenu({ chatId: null, isOpen: false, position: null })}\n                      />\n                      <div\n                        className=\"chat-context-menu\"\n                        style={{\n                          top: `${chatMenu.position?.top}px`,\n                          left: `${chatMenu.position?.left}px`\n                        }}\n                      >\n                        <button\n                          className=\"menu-item\"\n                          onClick={() => {\n                            const newName = prompt('Введите новое название:',\n                              chats.find(c => c.id === chatMenu.chatId)?.title);\n                            if (newName) handleRenameChat(newName);\n                          }}\n                        >\n                          Переименовать\n                        </button>\n                        <button\n                          className=\"menu-item delete\"\n                          onClick={handleDeleteChat}\n                        >\n                          Удалить чат\n                        </button>\n                      </div>\n                    </>\n                  )}\n                </div>\n              </div>\n            ))\n          ) : (\n            <div className=\"no-chats\">\n              Нет чатов в этой категории\n            </div>\n          )}\n        </div>\n      </div>\n\n\n      {/* Затемнение фона при открытом меню */}\n      {isMenuOpen && (\n        <div className=\"menu-overlay\" onClick={() => setIsMenuOpen(false)} />\n      )}\n\n\n      {/* Ветки сообщений */}\n      <div className=\"messages-container\">\n          {messages\n            .filter(msg => msg.parent_id === null)\n            .map((root) => (\n              <MessageThread\n                key={root.id}\n                message={root}\n                messages={messages}\n                childIndexes={childIndexes}\n                setChildIndexes={setChildIndexes}\n                onLastMessageIdChange={(id) => {\n                  console.log('Current last message ID:', id);\n                  setRootID(id)\n                }}\n                setReplyContext={setReplyContext}\n              />\n            ))}\n        </div>\n\n\n      {/* Панель ввода (только если выбран чат) */}\n      {activeChat && (\n        <div className=\"input-area\">\n          {replyContext && (\n            <div className=\"reply-preview\">\n              Ответ на: {replyContext.messageText}\n              <button onClick={() => setReplyContext(null)}>×</button>\n            </div>\n          )}\n\n          <div className=\"input-container\">\n            <button\n              className=\"attach-button\"\n              onClick={() => fileInputRef.current?.click()}\n            >\n              📎\n            </button>\n\n            <input\n              type=\"file\"\n              ref={fileInputRef}\n              onChange={handleAttachment}\n              style={{ display: 'none' }}\n              accept=\".pdf\"\n            />\n\n            <textarea\n              value={inputText}\n              onChange={(e) => setInputText(e.target.value)}\n              onKeyDown={handleKeyDown}\n              placeholder=\"Напишите сообщение...\"\n              rows={1}\n            />\n\n            <button\n              className=\"send-button\"\n              onClick={handleSendMessage}\n              disabled={!inputText.trim() && !attachment}\n            >\n              {attachment ? '📤' : '➤'}\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}