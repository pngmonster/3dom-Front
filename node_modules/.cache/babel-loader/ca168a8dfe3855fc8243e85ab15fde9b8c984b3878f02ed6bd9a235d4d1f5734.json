{"ast":null,"code":"export function transformChatOut(chatOut) {\n  var _chatOut$id;\n  return {\n    id: (_chatOut$id = chatOut.id) !== null && _chatOut$id !== void 0 ? _chatOut$id : '',\n    // fallback для null\n    title: chatOut.title,\n    model: chatOut.model,\n    created_at: chatOut.created_at,\n    isEmpty: false // можно вычислить, если нужно\n  };\n}\nexport function transformChats(chatOutList) {\n  return chatOutList.map(transformChatOut);\n}\nexport function transformMessageOut(messageOut) {\n  var _messageOut$id, _messageOut$parent_id, _messageOut$res_ids;\n  return {\n    id: (_messageOut$id = messageOut.id) !== null && _messageOut$id !== void 0 ? _messageOut$id : '',\n    // fallback для null\n    parent_id: (_messageOut$parent_id = messageOut.parent_id) !== null && _messageOut$parent_id !== void 0 ? _messageOut$parent_id : '',\n    res_ids: (_messageOut$res_ids = messageOut.res_ids) !== null && _messageOut$res_ids !== void 0 ? _messageOut$res_ids : [],\n    content: messageOut.content,\n    role: messageOut.role,\n    created_at: messageOut.created_at\n  };\n}\nexport function transformMessages(messageOutList) {\n  return messageOutList.map(transformMessageOut);\n}","map":{"version":3,"names":["transformChatOut","chatOut","_chatOut$id","id","title","model","created_at","isEmpty","transformChats","chatOutList","map","transformMessageOut","messageOut","_messageOut$id","_messageOut$parent_id","_messageOut$res_ids","parent_id","res_ids","content","role","transformMessages","messageOutList"],"sources":["/home/giicoo/projects/3DOM FRONT/3dom-Front/src/utils/transform.ts"],"sourcesContent":["import { ChatOut, MessageOut } from '../api/types';\nimport { Chat, Message } from '../types';\n\nexport function transformChatOut(chatOut: ChatOut): Chat {\n  return {\n    id: chatOut.id ?? '', // fallback для null\n    title: chatOut.title,\n    model: chatOut.model,\n    created_at: chatOut.created_at,\n    isEmpty: false, // можно вычислить, если нужно\n  };\n}\n\nexport function transformChats(chatOutList: ChatOut[]): Chat[] {\n  return chatOutList.map(transformChatOut);\n}\n\n\nexport function transformMessageOut(messageOut: MessageOut): Message {\n  return {\n    id: messageOut.id ?? '', // fallback для null\n    parent_id: messageOut.parent_id ?? '',\n    res_ids: messageOut.res_ids ?? [],\n    content: messageOut.content,\n    role: messageOut.role,\n    created_at: messageOut.created_at\n  };\n}\n\nexport function transformMessages(messageOutList: MessageOut[]): Message[] {\n  return messageOutList.map(transformMessageOut);\n}\n"],"mappings":"AAGA,OAAO,SAASA,gBAAgBA,CAACC,OAAgB,EAAQ;EAAA,IAAAC,WAAA;EACvD,OAAO;IACLC,EAAE,GAAAD,WAAA,GAAED,OAAO,CAACE,EAAE,cAAAD,WAAA,cAAAA,WAAA,GAAI,EAAE;IAAE;IACtBE,KAAK,EAAEH,OAAO,CAACG,KAAK;IACpBC,KAAK,EAAEJ,OAAO,CAACI,KAAK;IACpBC,UAAU,EAAEL,OAAO,CAACK,UAAU;IAC9BC,OAAO,EAAE,KAAK,CAAE;EAClB,CAAC;AACH;AAEA,OAAO,SAASC,cAAcA,CAACC,WAAsB,EAAU;EAC7D,OAAOA,WAAW,CAACC,GAAG,CAACV,gBAAgB,CAAC;AAC1C;AAGA,OAAO,SAASW,mBAAmBA,CAACC,UAAsB,EAAW;EAAA,IAAAC,cAAA,EAAAC,qBAAA,EAAAC,mBAAA;EACnE,OAAO;IACLZ,EAAE,GAAAU,cAAA,GAAED,UAAU,CAACT,EAAE,cAAAU,cAAA,cAAAA,cAAA,GAAI,EAAE;IAAE;IACzBG,SAAS,GAAAF,qBAAA,GAAEF,UAAU,CAACI,SAAS,cAAAF,qBAAA,cAAAA,qBAAA,GAAI,EAAE;IACrCG,OAAO,GAAAF,mBAAA,GAAEH,UAAU,CAACK,OAAO,cAAAF,mBAAA,cAAAA,mBAAA,GAAI,EAAE;IACjCG,OAAO,EAAEN,UAAU,CAACM,OAAO;IAC3BC,IAAI,EAAEP,UAAU,CAACO,IAAI;IACrBb,UAAU,EAAEM,UAAU,CAACN;EACzB,CAAC;AACH;AAEA,OAAO,SAASc,iBAAiBA,CAACC,cAA4B,EAAa;EACzE,OAAOA,cAAc,CAACX,GAAG,CAACC,mBAAmB,CAAC;AAChD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}